/*
 * Copyright (C) 2012  Politecnico di Milano
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**

\page sec01_ow Overall Arcitecture View

The Barbeque RTRM is a modular and efficient resource allocator for
many-core clustered accelerator engines, which provide support for:
- mixed workload management
- dynamic resource partitioning
- resources abstraction
- multi-objectve optimization policy
- low-overheads run-time management

Modern many-core computing platform are targeted to the execution of a
<em>mixed-workload</em> where multiple applications, with different
requirements and criticality levels, run concurrently thus competing on
accessing a reduce set of shared resource. Provided that each of these
application is associated with a proper description, which should specify
the mapping between an expected Quality-of-Service (QoS) level and the
correposnding resources demand, the Barbeque RTRM allows to arrange for an
"optimal" resources allocation to all the active applications.

The main goal of the <em>dynamic resource partitioning</em> support is to
grant resources to critical workloads while dynamically yield these
resources to best-effort workloads when (and only while) they are not
required by critical ones, thus optimize resource usage and fairness.

In order to improve applications portability among different acceleration
platforms, the Barbeque RTRM provides support for <em>resource
abstraction</em> which allows to exploit a decoupled perspective of the
resources between the users and the underlying hardware.  The user
applications will see virtual resources, e.g., the number of processing
elements available, but they will not be aware of which of the physical
resources are effectively available. At run-time the RTRM will perform
the virtual-to-physical mapping according to the current <em>multi-objective
optimization function</em> (low power, high performance, etc..) and run-time
phenomena (process variation, temporal and spatial temperature gradients,
hardware failures and, above all, workload variation).

Finally, introducing a low overhead on managing resource at run-time, while
still granting a valuable solution for the aformentioned issues is one more
goal of the Barbeque RTRM framework. This goals also as required the
development if this RTLib run-time library which applications should
exploit in order to take advantages from the Barbeque RTRM.


ADD MORE DETAILS HERE

*/
