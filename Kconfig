
comment "BarbequeRTRM Daemon Configuration"

config BBQUE_TEST_PLATFORM_DATA
  bool "Use Test Platform Data (TPD)"
  default y if TARGET_ANDROID
  default n
  ---help---
  Build the BarbequeRTRM with support for Test Platform Data.
  When compiled with this option turned on, all the target specific
  platform control facilities are disabled.

  This could be a convenient way to use the BarbequeRTRM for initial
  application development and integration, without worry about daemon
  setup or requiring to run the daemon as root.


comment "Plugins Management"

menu "Scheduling Policy"
  source "barbeque/plugins/schedpol/Kconfig"

endmenu

choice
  prompt "RPC Channel"

  config BBQUE_RPC_FIFO
    bool "FIFO based"
    ---help---
    Use the FIFO based RPC channel

endchoice


comment "RTLib Configuration"

config BBQUE_RTLIB_PERF_SUPPORT
  bool "Enable Performance Counters support on RTLib"
  depends on TARGET_LINUX
  default y
  ---help---
  Build the Run-Time Library (RTLib) with support for Performance Counters.
  These counters allows an application, which has been integrated with the
  RTLib, to collect transparently a set of profiling information related
  to the run-time execution.

  This option is useful to port easily the RTLib on platforms not supporting
  performance counters, such as some Android devices with older kernels.

config BBQUE_RTLIB_CGROUPS_SUPPORT
  bool "Enable CGroups support on RTLib"
  depends on TARGET_LINUX
  depends on !BBQUE_TEST_PLATFORM_DATA
  default n if BBQUE_TEST_PLATFORM_DATA
  default y
  ---help---
  Build the Run-Time Library (RTLib) with support for CGroups.
  This framework allows an application, which has been integrated with the
  RTLib, to collect transparently a set of profiling information related
  to the run-time execution.

  This option is useful to port easily the RTLib on platforms not supporting
  or using CGroups for run-time resources management, such as some Android
  devices.


menu "Advanced options"

config BBQUE_BUILD_DEBUG
  bool "Build a DEBUG version"
  default n
  ---help---
  Build the BarbequeRTRM with DEBUGGING support enabled.

  This will produce a version of both the daemon and the RTLib with much more
  logging messages and debug symbols, which is suitable for debugging purposes.

config BBQUE_RTLIB_UNMANAGED_SUPPORT
  bool "Enable UNMANAGED support on RTLib"
  depends on TARGET_LINUX
  default y
  ---help---
  Build the Run-Time Library (RTLib) with support for UNMANAGED applications.

  An application running in UNMANAGED mode is not controlled by the BarbequRTRM and
  its automatically configured by the RTLib to run in AWM 0 (by default).
  Once this support is enabled, an application could be executed un UNMANAGED mode
  by setting the "U" flag in the BBQUE_RTLIB_OPTS environment variable.
  Such flag could be followed by the ID of the AWM the application should be configured
  to run into, for example:
    BBQUE_RTLIB_OPTS="U3"
  will run the application in AWM 3.

  This option is useful to run applications without BarbequeRTRM control, for example to
  easily support Design Space Exploration (DSE) or the initial development stages of
  a new application.

  Say NO to this option if unsure.

config BBQUE_APP_PRIO_LEVELS
  int "Number of priority levels"
  default 5
  ---help---
  Applications are scheduled according to their priority which is a value
  ranging from 0 (highest priority) to a defined minimum value.

  Recipies define the priority of the corresponding Application.

config BBQUE_BUILD_TESTS
  bool "Build the TEST suite"
  default n
  ---help---
  Build the BarbequeRTRM test suite.

  This will build also the set of regression tests used to verify framework
  stability during development.
  NOTE: this is an experimental and not completed feaure, leave un-selected is
  unsure.

comment "Scheduling Policies Configuration"

config BBQUE_SP_YAMS_PARALLEL
  bool "YaMS parallelized execution"
  default y
  ---help---
  Build the YaMS policy with support for parallelized metrics computation.

  Select this option if you plan to run the BarbequeRTRM daemon on a multi-core
  host machine.

config BBQUE_SP_COWS_BINDING
  bool "Co-scheduling workloads (COWS) binding"
  default n
  ---help---
  Enable this option only if the recipes feature information about some
  performance counters based statistics. and the scheduling policy implements
  the support to exploit such information. This potentially leads to a more
  effective binding (i.e. selection of the resource domain of the AWM) in order
  to establish whether it is better to co-schedule applications on the same
  resource binding domain (e.g., CPU node) or spread them among different
  domains.

comment "Synchronization Policies Configuration"

config BBQUE_YM_SYNC_FORCE
  bool "Synchronization point forcing (EXPERIMENTAL)"
  default y
  ---help---
  Enable the Sync Point forcing via Synchronization Manager and RTLib.

  By selecting this option, the Synchronization Manager (YM) enforce EXCs
  reconfiguration to be aligned with the synchronization latency defined by
  applications being reconfigured.
  The synchronization latency is the time delay required by an application to
  be in a synchronization point, i.e. complete the current run and being ready
  to start a new one.

  In general this option could be keept disabled, since it is mandatory just
  on few specific platforms and programming paradigms combinations.
  Specifically, it should be explicitly enabled just when a resource
  contention treat could be expected on a specific target platform or
  programming paradigm.

  NOTE: disabling Sync Point Enforcing is corrently not completely safe and
        could lead to a reconfiguration miss for some applications.
        Use this feature at your own risk.

  If unsure, select Y

config BBQUE_YP_SASB_ASYNC
  bool "SASB asynchronous calls"
  default n if TARGET_ANDROID
  default y
  ---help---
  Build the SASM policy with support for asynchronous protocol calls.

  By selecting this option, the synchronization protocol is executed with
  asynchronous calls which means that the interaction with applications to be
  re-configured is parallelized, i.e. each protocol requets is managed by a
  dedicated thread and all them runs in parallel.

  Select this option if you plan to run the BarbequeRTRM daemon on a multi-core
  host machine and with a average high number of concurrent applications.

endmenu # Advanced options
