#!/bin/bash

# Source the BOSP Shell configuration
source @CMAKE_INSTALL_PREFIX@/etc/bbque/bosp_init.env

# CONSOLE CONFIGURATION
BBQUE_SYSROOT="${BBQUE_SYSROOT:-$SYSROOT}"
BBQUE_CONF="${BBQUE_CONF:-$CONF}"
BBQUE_PILLAYOUT="${BBQUE_PILLAYOUT:-$PILLAYOUT}"
BBQUE_SUPDATE="${BBQUE_SUPDATE:-1}"
BBQUE_LOGFILE="${BBQUE_LOGFILE:-$BBQUE_SYSROOT/var/bbque/bbque.log}"

# - XWindows geometries recoveder using "xwininfo" utility
# - Font is configured by "-fn" option, to see a list of fonts run:
#     "xlsfonts | less"
FONT=-misc-fixed-medium-r-normal--10-100-75-75-c-60-iso10646-1


mkdir -p $BBQUE_SYSROOT/var/bbque 2>/dev/null
cat > $BBQUE_SYSROOT/var/bbque/BbqConsole_Resources.sh <<EOF
#!/bin/bash

function cleanup {
local LINES_TO_FILL=\$1
for i in \`seq \$LINES_TO_FILL\`; do
	printf "%74s\n"
done
}

function separator {
printf "\\
__________________________________________________________________________\r\\
_____[ %s ]\n" \$1
}

function bosp_dump_tasks {
local LINES_TO_FILL=\$1
echo -ne "\E[30;42m"
echo "                                                                          "
echo "                    Managed Applications: EXCs                            "
echo "                                                                          "
echo -ne "$BOSPSH_RESET$BOSPSH_DEFAULT"

let LINES_TO_FILL=LINES_TO_FILL-6

for APP in \`find $BBQUE_SYSROOT/mnt/cgroup/bbque/ -maxdepth 1 -type d\`; do
	NAME=\`basename \$APP\`
	if [ \$NAME == "bbque" -o \$NAME == "silos" -o \$NAME == "res" -o \$NAME == "host" ]; then
		continue
	fi

	CPUS=\`cat \$APP/cpuset.cpus\`
	CPUQ=\`cat \$APP/cpu.cfs_quota_us\`
	CPUP=\`cat \$APP/cpu.cfs_period_us\`
	MEMN=\`cat \$APP/cpuset.mems\`
	MEMB=\`cat \$APP/memory.limit_in_bytes\`
	MEMU=\`cat \$APP/memory.max_usage_in_bytes\`
	MEMC=\`cat \$APP/memory.stat | grep rss | head -n1 | cut -d" " -f2\`

	let CPUU=(CPUQ * 100)/CPUP
	[ \$CPUQ -eq -1 ] && CPUU=-1
	let MEMB_MB=(MEMB/1024)/1024
	if [ \$MEMB_MB -gt 102400 ]; then
		# We don't expexct more than 100GB memory
		MEMB_MB=-1
	fi
	let MEMC_MB=(MEMC/1024)/1024
	let MEMU_MB=(MEMU/1024)/1024

	printf "\\
____[ \E[1m%-26s\E[0m ]________________________________________\n\\
CPUs: %9s      - \E[33;49m%3d\E[39;49m [%%]     {P: %9d [us] - Q: %7d [us]}  \n\\
MEMs: \E[33;49m%9d\E[39;49m [MB] - %3s [nodes] {C: %9d [MB] - M: %7d [MB]}  \n"\\
	\${NAME} \${CPUS} \${CPUU} \${CPUP} \${CPUQ} \${MEMB_MB} \${MEMN} \${MEMC_MB} \${MEMU_MB}

let LINES_TO_FILL=LINES_TO_FILL-3
done

cleanup \$LINES_TO_FILL

}

TERMINAL_LINES=\`tput lines\`
let REMAINING_LINES=TERMINAL_LINES-6
while [ 1 ]; do
	echo -ne "\E[0;0H"
	printf "BOSP Console :: Tasks Monitor %40s\n%74s\n" "\`date +%c\`" ""
	if [ -d $BBQUE_SYSROOT/mnt/cgroup/bbque ]; then
		bosp_dump_tasks \$TERMINAL_LINES
	else
		printf "%74s\n%-74s\n%74s\n" "" "     BarbequeRTRM daemon NOT running" ""
		cleanup \$REMAINING_LINES
	fi
	sleep $BBQUE_SUPDATE
done


EOF
chmod a+x $BBQUE_SYSROOT/var/bbque/BbqConsole_Resources.sh

cat > $BBQUE_SYSROOT/var/bbque/BbqConsole_CGroups.sh <<EOF
#!/bin/bash

function cleanup {
local LINES_TO_FILL=\$1
for i in \`seq \$LINES_TO_FILL\`; do
	printf "%74s\n"
done
}

function separator {
printf "\\
__________________________________________________________________________\r\\
_____[ %s ]\n" \$1
}

function bosp_dump_resources {
local LINES_TO_FILL=\$1
echo -ne "\E[30;42m"
echo "                                                                          "
echo "                    System Resources: Main TARGET                         "
echo "                                                                          "
echo -ne "$BOSPSH_RESET$BOSPSH_DEFAULT"

let LINES_TO_FILL=LINES_TO_FILL-6

for TRG in \`find $BBQUE_SYSROOT/mnt/cgroup/bbque/ -maxdepth 1 -type d\`; do
	NAME=\`basename \$TRG\`
	if [ \$NAME != "bbque" -a \$NAME != "silos" -a \$NAME != "host" -o \$NAME == "res" ]; then
		continue
	fi

	CPUS=\`cat \$TRG/cpuset.cpus\`
	CPUQ=\`cat \$TRG/cpu.cfs_quota_us\`
	CPUP=\`cat \$TRG/cpu.cfs_period_us\`
	MEMN=\`cat \$TRG/cpuset.mems\`
	MEMB=\`cat \$TRG/memory.limit_in_bytes\`
	MEMU=\`cat \$TRG/memory.max_usage_in_bytes\`
	MEMC=\`cat \$TRG/memory.stat | grep rss | head -n1 | cut -d" " -f2\`

	let CPUU=(CPUQ * 100)/CPUP
	[ \$CPUQ -eq -1 ] && CPUU=-1
	let MEMB_MB=(MEMB/1024)/1024
	if [ \$MEMB_MB -gt 102400 ]; then
		# We don't expexct more than 100GB memory
		MEMB_MB=-1
	fi
	let MEMC_MB=(MEMC/1024)/1024
	let MEMU_MB=(MEMU/1024)/1024

	printf "\\
____[ \E[1m%-26s\E[0m ]________________________________________\n\\
CPUs: %9s      - \E[33;49m%3d\E[39;49m [%%]     {P: %9d [us] - Q: %7d [us]}  \n\\
MEMs: \E[33;49m%9d\E[39;49m [MB] - %3s [nodes] {C: %9d [MB] - M: %7d [MB]}  \n"\\
	\${NAME} \${CPUS} \${CPUU} \${CPUP} \${CPUQ} \${MEMB_MB} \${MEMN} \${MEMC_MB} \${MEMU_MB}

	let LINES_TO_FILL=LINES_TO_FILL-3

done

echo "                                                                          "
echo "                                                                          "
echo -ne "\E[30;42m"
echo "                                                                          "
echo "                     Managed Resources: NODES                             "
echo "                                                                          "
echo -ne "$BOSPSH_RESET$BOSPSH_DEFAULT"

let LINES_TO_FILL=LINES_TO_FILL-6

for TRG in \`find $BBQUE_SYSROOT/mnt/cgroup/bbque/res -maxdepth 1 -type d\`; do
	NAME=\`basename \$TRG\`
	if [ \$NAME == "res" ]; then
		continue
	fi

	CPUS=\`cat \$TRG/cpuset.cpus\`
	CPUQ=\`cat \$TRG/cpu.cfs_quota_us\`
	CPUP=\`cat \$TRG/cpu.cfs_period_us\`
	MEMN=\`cat \$TRG/cpuset.mems\`
	MEMB=\`cat \$TRG/memory.limit_in_bytes\`
	MEMU=\`cat \$TRG/memory.max_usage_in_bytes\`
	MEMC=\`cat \$TRG/memory.stat | grep rss | head -n1 | cut -d" " -f2\`

	let CPUU=(CPUQ * 100)/CPUP
	[ \$CPUQ -eq -1 ] && CPUU=-1
	let MEMB_MB=(MEMB/1024)/1024
	if [ \$MEMB_MB -gt 102400 ]; then
		# We don't expexct more than 100GB memory
		MEMB_MB=-1
	fi
	let MEMC_MB=(MEMC/1024)/1024
	let MEMU_MB=(MEMU/1024)/1024

	printf "\\
____[ \E[1m%-26s\E[0m ]________________________________________\n\\
CPUs: %9s      - \E[33;49m%3d\E[39;49m [%%]     {P: %9d [us] - Q: %7d [us]}  \n\\
MEMs: \E[33;49m%9d\E[39;49m [MB] - %3s [nodes] {C: %9d [MB] - M: %7d [MB]}  \n"\\
	\${NAME} \${CPUS} \${CPUU} \${CPUP} \${CPUQ} \${MEMB_MB} \${MEMN} \${MEMC_MB} \${MEMU_MB}

	let LINES_TO_FILL=LINES_TO_FILL-3

done

cleanup \$LINES_TO_FILL

}

TERMINAL_LINES=\`tput lines\`
let REMAINING_LINES=TERMINAL_LINES-6
while [ 1 ]; do
	echo -ne "\E[0;0H"
	printf "BOSP Console :: Resources Monitor %40s\n%74s\n" "\`date +%c\`" ""
	if [ -d $BBQUE_SYSROOT/mnt/cgroup/bbque ]; then
		bosp_dump_resources \$TERMINAL_LINES
	else
		printf "%74s\n%-74s\n%74s\n" "" "     BarbequeRTRM daemon NOT running" ""
		cleanup \$REMAINING_LINES
	fi
	sleep $BBQUE_SUPDATE
done

EOF
chmod a+x $BBQUE_SYSROOT/var/bbque/BbqConsole_CGroups.sh

################################################################################
#     Left Panel
################################################################################

# The System log
aterm +sb -fn $FONT -geometry 115x18+-9+18 -title "Syslog" \
	-e tail -f /var/log/syslog &

################################################################################
#     Right Panel
################################################################################

# Display CGROUPs configuration
aterm +sb -cr black -fn $FONT -geometry 74x30--9+18 \
	-title "BOSP Resources Monitor" \
	-e $BBQUE_SYSROOT/var/bbque/BbqConsole_CGroups.sh &
# Display of managed TASKSs configuration
aterm +sb -cr black -fn $FONT -geometry 74x41--8+363 \
	-title "BOSP Tasks Monitor" \
	-e $BBQUE_SYSROOT/var/bbque/BbqConsole_Resources.sh &
# Display CPUs usages (by HTOP)
aterm +sb -fn $FONT -geometry 74x20--7-30 -title "CPUs usages" \
	-e htop &

