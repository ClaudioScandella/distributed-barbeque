# BOSP Shell: the Barbeque OpenSource Project Shell

# Load BarbequeRTRM daemon default
source @CONFIG_BOSP_RUNTIME_PATH@/@BBQUE_PATH_DEFAULTS@/bbqued

BOSPSH_SOURCES="@PROJECT_SOURCE_DIR@/.."

# Define a set of useful console color escapes
# Other colors could be obtained using this syntax:
#          \033[COLOR1;COLOR2m
# where COLOR1 and COLOR2 are Fore/Background:
# Color   Fg Bg
# black   30 40
# red     31 41
# green   32 42
# yellow  33 43
# blue    34 44
# magenta 35 45
# cyan    36 46
# white   37 47

BOSPSH_WHITE="\033[1;37m"
BOSPSH_LGRAY="\033[37m"
BOSPSH_GRAY="\033[1;30m"
BOSPSH_BLACK="\033[30m"
BOSPSH_RED="\033[31m"
BOSPSH_LRED="\033[1;31m"
BOSPSH_GREEN="\033[32m"
BOSPSH_LGREEN="\033[1;32m"
BOSPSH_BROWN="\033[33m"
BOSPSH_YELLOW="\033[1;33m"
BOSPSH_BLUE="\033[34m"
BOSPSH_LBLUE="\033[1;34m"
BOSPSH_PURPLE="\033[35m"
BOSPSH_PINK="\033[1;35m"
BOSPSH_CYAN="\033[36m"
BOSPSH_LCYAN="\033[1;36m"

BOSPSH_RESET="\033[0m"
BOSPSH_DEFAULT=$BOSPSH_RESET


################################################################################
# Generic BOSP Shell commands
################################################################################

# BOSP Shell On-Line HELP
function bosp-help {
clear
echo -ne '\E[37;42m'
echo "                                                                               "
echo "                    .:: BOSP Shell - HELP On-Line ::.                          "
echo "                                                                               "
echo -ne "$BOSPSH_RESET$BOSPSH_WHITE"
cat <<EOF

Almost all BOSP-Shell commands start by "bosp-" or "harpaos-", thus using shell
completion it is easy to get a list of all the available commands.
Thereafter is a list of the main ones, with a short description.
For a longer description type "bosp-help <command>"


.:: Generic BOSP Shell commands
--------------------------------

bosp-cleanup - Clean-up all BOSP run-time generated data
bosp-help    - Print this help, or command specific helps
bosp-shell   - Start a new BOSP terminal
bosp-version - Dump info on the BarbequeRTRM in use


.:: Common BOSP Building targets
----------------------------------

bosp-build-clean       - Clean BOSP core components (bbque and rtlib demos)
bosp-build-debug       - Build BOSP in debug mode
bosp-build-release     - Build BOSP in release mode


.:: HARPA-OS Management Commands
-------------------------------------

harpaos-console - Start a set of HARPA-OS monitoring consoles
harpaos-layapp  - Build a new HARPA-OS application from template
harpaos-log     - Show the HARPA-OS daemon log
harpaos-oplb    - Operating points list builder script:
harpaos-pid     - Get the PID of the running HARPA-OS daemon
harpaos-plot    - Plot the specified Index data file
harpaos-plp     - HARPA-OS Platform Layouts (*.bpl) parser
harpaos-start   - Start a foreground HARPA-OS session
harpaos-startd  - Start the HARPA-OS daemon
harpaos-stats   - Dump HARPA-OS daemon statistics
harpaos-stest   - Stress test the HARPA-OS dameon
harpaos-stopd   - Stop the HARPA-OS daemon


.:: Test Applications
----------------------

harpaos-stest          - a random workload HARPA-OS stress test
harpaos-testapp        - a generic HARPA-OS managed test application


EOF
}

function bosp-version {
echo -ne "$BOSPSH_GREEN"
cat <<EOF
.:: BarbequeRTRM:
- Version.................... @GIT_SHA1@
- Build type................. @CMAKE_BUILD_TYPE@
- Build configuration:
     RPC FIFOs............... @CONFIG_BBQUE_RPC_FIFO@
     Test Platform Data...... @CONFIG_BBQUE_TEST_PLATFORM_DATA@
     Performance Counters.... @CONFIG_BBQUE_RTLIB_PERF_SUPPORT@
EOF
echo -ne "$BOSPSH_DEFAULT"
}

function bosp-cleanup {
# Wipe BOSP run-time data
rm -rf $SYSROOT/@BBQUE_PATH_VAR@/*
}

# - XWindows geometries recoveder using "xwininfo" utility
# - Font is configured by "-fn" option, to see a list of fonts run:
#     "xlsfonts | less"
FONT=-misc-fixed-medium-r-normal--10-100-75-75-c-60-iso10646-1
function bosp-shell {
	aterm +sb -fn $FONT -geometry 118x37+711+240 -title "HARPA-OS Shell"  \
			-e /bin/bash --init-file $SYSROOT/etc/bbque/bosp_init.env \
			&>/dev/null &
}

################################################################################
# Common BOSP Building targets
################################################################################

function bosp-build-clean {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Cleaning up BOSP (core components)"
echo -ne "$BOSPSH_DEFAULT"
make clean_bbque clean_rtlib_testapp clean_rtlib_tutorials
}

function bosp-build-release {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Release] BOSP"
echo -ne "$BOSPSH_DEFAULT"
make BUILD_TYPE="Release" bbque
}

function bosp-build-debug {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Debug] BOSP (with TPD support)"
echo -ne "$BOSPSH_DEFAULT"
make BUILD_TYPE="Debug" bbque
}

################################################################################
# BarbequeRTRM Management Commands
################################################################################

function harpaos-pid {
if [ ! -f $PIDFILE ]; then
	echo -ne "\nHARPA-OS NOT running\n\n"
	return 1
fi
cat $PIDFILE
}

function harpaos-stats {
if [ ! -f $PIDFILE ]; then
	echo -ne "\nHARPA-OS NOT running\n\n"
	return 1
fi
BOSPSH_BBQUE_PID=`harpaos-pid`
echo "Getting stats of HARPA-OS [$BOSPSH_BBQUE_PID]..."
sudo kill -USR1 $BOSPSH_BBQUE_PID
sudo kill -USR2 $BOSPSH_BBQUE_PID
}

function harpaos-startd {
if [ ! -f $PIDFILE ]; then
	bosp-cleanup
fi
if [ $# -ge 1 ]; then
	sudo BBQUE_CONF=$1 $SYSROOT/etc/init.d/bbqued start
else
	sudo $SYSROOT/etc/init.d/bbqued start
fi
}

function harpaos-stopd {
	sudo $SYSROOT/etc/init.d/bbqued stop
}

function harpaos-start {
bosp-cleanup
if [ $# -ge 1 ]; then
	sudo $BIN -c $1
else
	sudo $BIN
fi
}

function harpaos-console-stop {
	[ -f $SYSROOT/var/bbque/harpaos-console.pids ] && \
		kill -TERM `cat $SYSROOT/var/bbque/harpaos-console.pids`
}

function harpaos-log {
	LOG="${1:-$LOGFILE}"
	echo "Opening barbeque logfile [$LOG]..."
	if [ -n "$DISPLAY" ]; then
		aterm +sb -fn $FONT -geometry 140x56+-9-17 -title "BBQUE Log [$LOG]" \
		-e tail -n+1 -f $LOG \
		&>/dev/null &
	else		
		echo "Fallback to text mode."
		cat $LOG | less -R
	fi
}

function harpaos-log-clear {
	echo "Erasing logfile [$LOG]..."
	LOG="${1:-$LOGFILE}"
	sudo rm -f $LOG
}

function harpaos-plot {
echo "Plotting DAT file [$1]..."
GTIT=${2:-"Plot of `basename $1`"}
YLAB=${3:-"<Some Y-Label>"}
OEPS=${4:-""}

if [ "x$OEPS" == "x" ]; then
		OCMD="--geometry 640x195+0+0"
		echo "Dumping graph on screen..."
else
		OCMD="--hardcopy $OEPS"
		echo "Dumping EPS to file [$OEPS]..."
fi

cat $1 | $SYSROOT/bin/feedgnuplot \
		--lines --points \
		--nodomain --dataid \
		--xlabel "Scheduling Events" \
		--ylabel "$YLAB" \
		--title "$GTIT" \
		--autolegend \
		--xmax 40 \
		--ymin 0 --ymax 12 \
		--extracmds "set border linewidth 1" \
		--extracmds "set key left spacing 0.8" \
		$OCMD
}

function harpaos-cmd {
	echo "Send HARPA-OS command [$*]..."
	echo "$*" > $SYSROOT/var/bbque/bbque_cmds
}

################################################################################
# HARPA-OS Application Templates
################################################################################

function harpaos-layapp {
local APP_NAME='MyApp'
local APP_TYPE=0
local LANG=(cpp ocl)

clear

CDIR=`pwd`

echo
echo '=== Building a new HARPA-OS application from template ==='
echo -n "Enter application name (use CamelCase, no spaces allowed) [$APP_NAME]: "
read APP_NAME
[ x$APP_NAME == x ] && APP_NAME='MyApp'

echo -n "Select application type (0: CPP) [$APP_TYPE]: "
read APP_TYPE
[ x$APP_TYPE == x ] && APP_TYPE=0

local TEMPLATE_DIR="$BOSPSH_SOURCES/barbeque/config/templates"
local TEMPLATE_BUILDER="$TEMPLATE_DIR/bbque_template_${LANG[$APP_TYPE]}.bsx"
# Generate the application template if not already available
if [ ! -f $TEMPLATE_BUILDER ]; then
	cd $TEMPLATE_DIR
	./build.sh ${LANG[$APP_TYPE]}
fi

# Move into BOSP source tree root folder
cd $BOSPSH_SOURCES

# Generate the application
$TEMPLATE_BUILDER "$BOSPSH_SOURCES" $APP_NAME

# Trigger a bootstrap to re-configure the building system
make bootstrap

# Move into application folder
cd $BOSPSH_SOURCES/contrib/user/$APP_NAME

# Open editor for EXC editing
[ xdg-open &>/dev/null ] && \
		xdg-open .       && \
		xdg-open src/${APP_NAME}_exc.cc

# Switch back to original folder, which could be convenient to trigger make
cd $CDIR

}

function harpaos-testapp {
		bbque-testapp
}



################################################################################
# BOSP Shell MAIN
################################################################################

# Setup Shell variables
PATH=$SYSROOT/sbin:$SYSROOT/bin:$SYSROOT/usr/bin:$PATH
PS1="\[${BOSPSH_LRED}\][HARPA-OS \[${BOSPSH_YELLOW}\]\W\[${BOSPSH_LRED}\]] \> \[${BOSPSH_DEFAULT}\]"
export BOSP_SYSROOT=$SYSROOT

# Dump out a nice BOSP Shell logo
clear
echo -e '\E[37;41m'

echo "                                                                               "
echo "                        .:: HARPA-OS Shell ::.                                 "
echo "                                                                               "
echo -ne "$BOSPSH_RESET$BOSPSH_LGRAY"
cat <<EOF

Welcome to HARPA-OS SHELL!

Type "bosp-help" for on-line help on available commands

EOF

# Setup default SHELL text color
echo -e "$BOSPSH_DEFAULT"

#
# vim: set tabstop=4:
