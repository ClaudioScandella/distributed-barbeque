# BOSP Shell: the Barbeque OpenSource Project Shell

# Load BarbequeRTRM daemon default
source @CMAKE_INSTALL_PREFIX@/@BBQUE_PATH_DEFAULTS@/bbqued

BOSPSH_SOURCES="@PROJECT_SOURCE_DIR@/.."

# Define a set of useful console color escapes
# Other colors could be obtained using this syntax:
#          \033[COLOR1;COLOR2m
# where COLOR1 and COLOR2 are Fore/Background:
# Color   Fg Bg
# black   30 40
# red     31 41
# green   32 42
# yellow  33 43
# blue    34 44
# magenta 35 45
# cyan    36 46
# white   37 47

BOSPSH_WHITE="\033[1;37m"
BOSPSH_LGRAY="\033[37m"
BOSPSH_GRAY="\033[1;30m"
BOSPSH_BLACK="\033[30m"
BOSPSH_RED="\033[31m"
BOSPSH_LRED="\033[1;31m"
BOSPSH_GREEN="\033[32m"
BOSPSH_LGREEN="\033[1;32m"
BOSPSH_BROWN="\033[33m"
BOSPSH_YELLOW="\033[1;33m"
BOSPSH_BLUE="\033[34m"
BOSPSH_LBLUE="\033[1;34m"
BOSPSH_PURPLE="\033[35m"
BOSPSH_PINK="\033[1;35m"
BOSPSH_CYAN="\033[36m"
BOSPSH_LCYAN="\033[1;36m"

BOSPSH_RESET="\033[0m"
BOSPSH_DEFAULT=$BOSPSH_LGRAY


################################################################################
# Generic BOSP Shell commands
################################################################################

# BOSP Shell On-Line HELP
function bosp-help {
clear
echo -ne '\E[37;42m'
echo "                                                                               "
echo "                    .:: BOSP Shell - HELP On-Line ::.                          "
echo "                                                                               "
echo -ne "$BOSPSH_RESET$BOSPSH_GREEN"
cat <<EOF

Almost all BOSP-Shell commands start by "bosp-" or "bbque-", thus using shell
completion it is easy to get a list of all the available commands.
Thereafter is a list of the main ones, with a short description.
For a longer description type "bosp-help <command>"


.:: Generic BOSP Shell commands
--------------------------------

bosp-cleanup - Clean-up all BOSP run-time generated data
bosp-help    - Print this help, or command specific helps
bosp-version - Dump info on the BarbequeRTRM in use


.:: Common BOSP Building targets
----------------------------------

bosp-build-clean       - Clean BOSP core components (bbque and rtlib demos)
bosp-build-debug       - Build BOSP in debug mode
bosp-build-release     - Build BOSP in release mode
bosp-build-debug-tpd   - Build BOSP in debug mode, with TPD suppport
bosp-build-release-tpd - Build BOSP in release mode, with TPD support


.:: BarbequeRTRM Management Commands
-------------------------------------

bbque-console - Start a set of BarbequeRTRM monitoring consoles
bbque-oplb    - Operating points list builder script:
bbque-pid     - Get the PID of the running Bbqued daemon
bbque-plp     - Bbque Platform Layouts (*.bpl) parser
bbque-start   - Start a foreground Barbeque session
bbque-startd  - Start the Bbqued daemon
bbque-stats   - Dump Bbqued daemon statistics
bbque-stest   - Stress test the Bbqued dameon
bbque-stopd   - Stop the Bbque daemon


.:: Test Applications
----------------------

bbque-stest          - a random workload BBQ stress test
bbque-testapp        - a generic BBQ test application
bbque-tutorial-plain - a tutorial on RTLib Plain API
bbque-tutorial-aem   - a tutorial on RTLib AEM API


.:: PARSEC (v2.1) Benchmarks Commands
--------------------------------------

bosp-parsec21-bodytrack - Start the Bodytrack benchmark
bosp-parsec21-ferret    - Start the Ferret benchmark


EOF
}

function bosp-version {
echo -ne "$BOSPSH_GREEN"
cat <<EOF
.:: BarbequeRTRM:
- Version.................... @GIT_SHA1@
- Build type................. @CMAKE_BUILD_TYPE@
- Build configuration:
     RPC FIFOs............... @BBQUE_RPC_FIFO@
     Test Platform Data...... @BBQUE_TEST_PLATFORM_DATA@
     Performance Counters.... @BBQUE_RTLIB_PERF_SUPPORT@
EOF
echo -ne "$BOSPSH_DEFAULT"
}

################################################################################
# Common BOSP Building targets
################################################################################

function bosp-build-clean {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Cleaning up BOSP (core components)"
echo -ne "$BOSPSH_DEFAULT"
make clean_bbque clean_rtlib_testapp clean_rtlib_tutorials
}

function bosp-build-release {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Release] BOSP"
echo -ne "$BOSPSH_DEFAULT"
make BUILD_TYPE="Release" bbque
}

function bosp-build-debug {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Debug] BOSP (with TPD support)"
echo -ne "$BOSPSH_DEFAULT"
make BBQUE_CMAKE_OPTS="-DBBQUE_TEST_PLATFORM_DATA=ON" BUILD_TYPE="Debug" bbque
}

function bosp-build-release-tpd {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Release] BOSP (with TPD support)"
echo -ne "$BOSPSH_DEFAULT"
make BBQUE_CMAKE_OPTS="-DBBQUE_TEST_PLATFORM_DATA=ON" BUILD_TYPE="Release" bbque
}

function bosp-build-debug-tpd {
echo -ne "${BOSPSH_BLUE}"
echo -e "*** Rebuilding [Debug] BOSP (with TPD support)"
echo -ne "$BOSPSH_DEFAULT"
make BBQUE_CMAKE_OPTS="-DBBQUE_TEST_PLATFORM_DATA=ON" BUILD_TYPE="Debug" bbque
}

################################################################################
# BarbequeRTRM Management Commands
################################################################################

function bosp-cleanup {
echo -ne "$BOSPSH_PURPLE"
echo "Wipe BOSP run-time data [$SYSROOT/@BBQUE_PATH_VAR@/]..."
rm -rf $SYSROOT/@BBQUE_PATH_VAR@/*
}

function bbque-pid {
if [ ! -f $PIDFILE ]; then
	echo -ne "\nBbqued NOT running\n\n"
	return 1
fi
cat $PIDFILE
}

function bbque-stats {
if [ ! -f $PIDFILE ]; then
	echo -ne "\nBbqued NOT running\n\n"
	return 1
fi
BOSPSH_BBQUE_PID=`bbque-pid`
echo "Getting stats of Bbqued [$BOSPSH_BBQUE_PID]..."
sudo kill -USR1 $BOSPSH_BBQUE_PID
sudo kill -USR2 $BOSPSH_BBQUE_PID
}

function bbque-startd {
if [ $# -ge 1 ]; then
	sudo BBQUE_CONF=$1 $SYSROOT/etc/init.d/bbqued start
else
	sudo $SYSROOT/etc/init.d/bbqued start
fi
}

function bbque-stopd {
	sudo $SYSROOT/etc/init.d/bbqued stop
}

function bbque-start {
if [ $# -ge 1 ]; then
	sudo $BIN -c $1
else
	sudo $BIN
fi
}

################################################################################
# Test-Applications
################################################################################



################################################################################
# PARSEC (v2.1) Benchmarks Commands
################################################################################
BOSPSH_PSEC21_SRCS=$BOSPSH_SOURCES/benchmarks/parsec-2.1/pkgs/apps
BOSPSH_PSEC21_BINS=$SYSROOT/usr/bin/parsec

# Bodytrack
BOSPSH_PSEC21_BTRACK_BIN=$BOSPSH_PSEC21_BINS/bodytrack
BOSPSH_PSEC21_BTRACK_DATA=$BOSPSH_PSEC21_SRCS/bodytrack/inputs

function bosp-parsec21-bodytrack {
$BOSPSH_PSEC21_BTRACK_BIN $BOSPSH_PSEC21_BTRACK_DATA/sequenceB_261 4 260 4000 5 2 4
}

# Ferret
BOSPSH_PSEC21_FERRET_BIN=$BOSPSH_PSEC21_BINS/ferret
BOSPSH_PSEC21_FERRET_DATA=$BOSPSH_PSEC21_SRCS/ferret/inputs

function bosp-parsec21-ferret {
$BOSPSH_PSEC21_FERRET_BIN \
	$BOSPSH_PSEC21_FERRET_DATA/corel \
	lsh  \
	$BOSPSH_PSEC21_FERRET_DATA/queries \
	10 10 4 $SYSROOT/var/bbque/ferret.log
}



################################################################################
# BOSP Shell MAIN
################################################################################

# Setup Shell variables
PATH=$SYSROOT/sbin:$SYSROOT/bin:$SYSROOT/usr/bin:$PATH
PS1="${BOSPSH_BLUE}[BOSPShell ${BOSPSH_LCYAN}\W${BOSPSH_BLUE}] \> ${BOSPSH_DEFAULT}"
export BOSP_SYSROOT=$SYSROOT

# Dump out a nice BOSP Shell logo
clear
echo -e '\E[37;44m'

echo "                                                                               "
echo "                            .:: BOSP Shell ::.                                 "
echo "                                                                               "
echo -ne "$BOSPSH_RESET$BOSPSH_BLUE"
cat <<EOF

Welcome to Barbeque OpenSource Project SHELL!

Type "bosp-help" for on-line help on available commands

EOF

# Setup default SHELL text color
echo -e "$BOSPSH_DEFAULT"

#
# vim: set tabstop=4:
