// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent_com.proto

#include "agent_com.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace bbque {
class GenericRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericRequest>
      _instance;
} _GenericRequest_default_instance_;
class GenericReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenericReply>
      _instance;
} _GenericReply_default_instance_;
class DiscoverRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoverRequest>
      _instance;
} _DiscoverRequest_default_instance_;
class DiscoverReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DiscoverReply>
      _instance;
} _DiscoverReply_default_instance_;
class ResourceStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceStatusRequest>
      _instance;
} _ResourceStatusRequest_default_instance_;
class ResourceStatusReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceStatusReply>
      _instance;
} _ResourceStatusReply_default_instance_;
class WorkloadStatusReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorkloadStatusReply>
      _instance;
} _WorkloadStatusReply_default_instance_;
class ChannelStatusReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelStatusReply>
      _instance;
} _ChannelStatusReply_default_instance_;
class NodeManagementRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NodeManagementRequest>
      _instance;
} _NodeManagementRequest_default_instance_;
class ApplicationSchedulingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ApplicationSchedulingRequest>
      _instance;
} _ApplicationSchedulingRequest_default_instance_;
}  // namespace bbque
namespace protobuf_agent_5fcom_2eproto {
static void InitDefaultsGenericRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_GenericRequest_default_instance_;
    new (ptr) ::bbque::GenericRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::GenericRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenericRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenericRequest}, {}};

static void InitDefaultsGenericReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_GenericReply_default_instance_;
    new (ptr) ::bbque::GenericReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::GenericReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenericReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenericReply}, {}};

static void InitDefaultsDiscoverRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_DiscoverRequest_default_instance_;
    new (ptr) ::bbque::DiscoverRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::DiscoverRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscoverRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscoverRequest}, {}};

static void InitDefaultsDiscoverReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_DiscoverReply_default_instance_;
    new (ptr) ::bbque::DiscoverReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::DiscoverReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DiscoverReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDiscoverReply}, {}};

static void InitDefaultsResourceStatusRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_ResourceStatusRequest_default_instance_;
    new (ptr) ::bbque::ResourceStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::ResourceStatusRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceStatusRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceStatusRequest}, {}};

static void InitDefaultsResourceStatusReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_ResourceStatusReply_default_instance_;
    new (ptr) ::bbque::ResourceStatusReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::ResourceStatusReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceStatusReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceStatusReply}, {}};

static void InitDefaultsWorkloadStatusReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_WorkloadStatusReply_default_instance_;
    new (ptr) ::bbque::WorkloadStatusReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::WorkloadStatusReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WorkloadStatusReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWorkloadStatusReply}, {}};

static void InitDefaultsChannelStatusReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_ChannelStatusReply_default_instance_;
    new (ptr) ::bbque::ChannelStatusReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::ChannelStatusReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelStatusReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelStatusReply}, {}};

static void InitDefaultsNodeManagementRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_NodeManagementRequest_default_instance_;
    new (ptr) ::bbque::NodeManagementRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::NodeManagementRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NodeManagementRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNodeManagementRequest}, {}};

static void InitDefaultsApplicationSchedulingRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bbque::_ApplicationSchedulingRequest_default_instance_;
    new (ptr) ::bbque::ApplicationSchedulingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bbque::ApplicationSchedulingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ApplicationSchedulingRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsApplicationSchedulingRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GenericRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenericReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoverRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DiscoverReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceStatusRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceStatusReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorkloadStatusReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelStatusReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NodeManagementRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ApplicationSchedulingRequest.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::GenericRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::GenericRequest, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::GenericRequest, dest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::GenericReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::GenericReply, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::DiscoverRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::DiscoverRequest, iam_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::DiscoverReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::DiscoverReply, iam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::DiscoverReply, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusRequest, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusRequest, dest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusRequest, average_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, used_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, degradation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, power_mw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ResourceStatusReply, load_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::WorkloadStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::WorkloadStatusReply, nr_ready_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::WorkloadStatusReply, nr_running_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ChannelStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ChannelStatusReply, connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ChannelStatusReply, latency_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::NodeManagementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::NodeManagementRequest, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::NodeManagementRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::NodeManagementRequest, partition_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ApplicationSchedulingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ApplicationSchedulingRequest, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ApplicationSchedulingRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ApplicationSchedulingRequest, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bbque::ApplicationSchedulingRequest, awm_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bbque::GenericRequest)},
  { 7, -1, sizeof(::bbque::GenericReply)},
  { 13, -1, sizeof(::bbque::DiscoverRequest)},
  { 19, -1, sizeof(::bbque::DiscoverReply)},
  { 26, -1, sizeof(::bbque::ResourceStatusRequest)},
  { 35, -1, sizeof(::bbque::ResourceStatusReply)},
  { 46, -1, sizeof(::bbque::WorkloadStatusReply)},
  { 53, -1, sizeof(::bbque::ChannelStatusReply)},
  { 60, -1, sizeof(::bbque::NodeManagementRequest)},
  { 68, -1, sizeof(::bbque::ApplicationSchedulingRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_GenericRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_GenericReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_DiscoverRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_DiscoverReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_ResourceStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_ResourceStatusReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_WorkloadStatusReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_ChannelStatusReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_NodeManagementRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bbque::_ApplicationSchedulingRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "agent_com.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017agent_com.proto\022\005bbque\"4\n\016GenericReque"
      "st\022\021\n\tsender_id\030\001 \001(\r\022\017\n\007dest_id\030\002 \001(\r\"\214"
      "\001\n\014GenericReply\022\'\n\005value\030\001 \001(\0162\030.bbque.G"
      "enericReply.Code\"S\n\004Code\022\006\n\002OK\020\000\022\025\n\021AGEN"
      "T_UNREACHABLE\020\001\022\026\n\022AGENT_DISCONNECTED\020\002\022"
      "\024\n\020REQUEST_REJECTED\020\003\"d\n\017DiscoverRequest"
      "\022\'\n\003iam\030\001 \001(\0162\032.bbque.DiscoverRequest.IA"
      "m\"(\n\003IAm\022\014\n\010INSTANCE\020\000\022\007\n\003NEW\020\001\022\n\n\006MASTE"
      "R\020\002\"n\n\rDiscoverReply\022%\n\003iam\030\001 \001(\0162\030.bbqu"
      "e.DiscoverReply.IAm\022\n\n\002id\030\002 \001(\r\"*\n\003IAm\022\014"
      "\n\010INSTANCE\020\000\022\t\n\005SLAVE\020\001\022\n\n\006MASTER\020\002\"Z\n\025R"
      "esourceStatusRequest\022\021\n\tsender_id\030\001 \001(\r\022"
      "\017\n\007dest_id\030\002 \001(\r\022\014\n\004path\030\003 \001(\t\022\017\n\007averag"
      "e\030\004 \001(\010\"|\n\023ResourceStatusReply\022\r\n\005total\030"
      "\001 \001(\004\022\014\n\004used\030\002 \001(\004\022\023\n\013degradation\030\003 \001(\r"
      "\022\023\n\013temperature\030\004 \001(\r\022\020\n\010power_mw\030\005 \001(\r\022"
      "\014\n\004load\030\006 \001(\r\";\n\023WorkloadStatusReply\022\020\n\010"
      "nr_ready\030\001 \001(\r\022\022\n\nnr_running\030\002 \001(\r\";\n\022Ch"
      "annelStatusReply\022\021\n\tconnected\030\001 \001(\010\022\022\n\nl"
      "atency_ms\030\002 \001(\r\"\241\001\n\025NodeManagementReques"
      "t\022\021\n\tsender_id\030\001 \001(\r\0222\n\005value\030\002 \001(\0162#.bb"
      "que.NodeManagementRequest.Action\022\025\n\rpart"
      "ition_num\030\003 \001(\r\"*\n\006Action\022\010\n\004JOIN\020\000\022\013\n\007D"
      "ISJOIN\020\001\022\t\n\005CHECK\020\002\"c\n\034ApplicationSchedu"
      "lingRequest\022\021\n\tsender_id\030\001 \001(\r\022\016\n\006app_id"
      "\030\002 \001(\r\022\020\n\010app_name\030\003 \001(\t\022\016\n\006awm_id\030\004 \001(\005"
      "2\246\003\n\013RemoteAgent\0228\n\010Discover\022\026.bbque.Dis"
      "coverRequest\032\024.bbque.DiscoverReply\0222\n\004Pi"
      "ng\022\025.bbque.GenericRequest\032\023.bbque.Generi"
      "cReply\022M\n\021GetResourceStatus\022\034.bbque.Reso"
      "urceStatusRequest\032\032.bbque.ResourceStatus"
      "Reply\022F\n\021GetWorkloadStatus\022\025.bbque.Gener"
      "icRequest\032\032.bbque.WorkloadStatusReply\022D\n"
      "\020GetChannelStatus\022\025.bbque.GenericRequest"
      "\032\031.bbque.ChannelStatusReply\022L\n\027SetNodeMa"
      "nagementAction\022\034.bbque.NodeManagementReq"
      "uest\032\023.bbque.GenericReplyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1473);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "agent_com.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_agent_5fcom_2eproto
namespace bbque {
const ::google::protobuf::EnumDescriptor* GenericReply_Code_descriptor() {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_agent_5fcom_2eproto::file_level_enum_descriptors[0];
}
bool GenericReply_Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GenericReply_Code GenericReply::OK;
const GenericReply_Code GenericReply::AGENT_UNREACHABLE;
const GenericReply_Code GenericReply::AGENT_DISCONNECTED;
const GenericReply_Code GenericReply::REQUEST_REJECTED;
const GenericReply_Code GenericReply::Code_MIN;
const GenericReply_Code GenericReply::Code_MAX;
const int GenericReply::Code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DiscoverRequest_IAm_descriptor() {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_agent_5fcom_2eproto::file_level_enum_descriptors[1];
}
bool DiscoverRequest_IAm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DiscoverRequest_IAm DiscoverRequest::INSTANCE;
const DiscoverRequest_IAm DiscoverRequest::NEW;
const DiscoverRequest_IAm DiscoverRequest::MASTER;
const DiscoverRequest_IAm DiscoverRequest::IAm_MIN;
const DiscoverRequest_IAm DiscoverRequest::IAm_MAX;
const int DiscoverRequest::IAm_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DiscoverReply_IAm_descriptor() {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_agent_5fcom_2eproto::file_level_enum_descriptors[2];
}
bool DiscoverReply_IAm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DiscoverReply_IAm DiscoverReply::INSTANCE;
const DiscoverReply_IAm DiscoverReply::SLAVE;
const DiscoverReply_IAm DiscoverReply::MASTER;
const DiscoverReply_IAm DiscoverReply::IAm_MIN;
const DiscoverReply_IAm DiscoverReply::IAm_MAX;
const int DiscoverReply::IAm_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* NodeManagementRequest_Action_descriptor() {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_agent_5fcom_2eproto::file_level_enum_descriptors[3];
}
bool NodeManagementRequest_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NodeManagementRequest_Action NodeManagementRequest::JOIN;
const NodeManagementRequest_Action NodeManagementRequest::DISJOIN;
const NodeManagementRequest_Action NodeManagementRequest::CHECK;
const NodeManagementRequest_Action NodeManagementRequest::Action_MIN;
const NodeManagementRequest_Action NodeManagementRequest::Action_MAX;
const int NodeManagementRequest::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GenericRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericRequest::kSenderIdFieldNumber;
const int GenericRequest::kDestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericRequest::GenericRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_GenericRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.GenericRequest)
}
GenericRequest::GenericRequest(const GenericRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_id_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(dest_id_));
  // @@protoc_insertion_point(copy_constructor:bbque.GenericRequest)
}

void GenericRequest::SharedCtor() {
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_id_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(dest_id_));
}

GenericRequest::~GenericRequest() {
  // @@protoc_insertion_point(destructor:bbque.GenericRequest)
  SharedDtor();
}

void GenericRequest::SharedDtor() {
}

void GenericRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericRequest::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericRequest& GenericRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_GenericRequest.base);
  return *internal_default_instance();
}


void GenericRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.GenericRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_id_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(dest_id_));
  _internal_metadata_.Clear();
}

bool GenericRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.GenericRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sender_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.GenericRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.GenericRequest)
  return false;
#undef DO_
}

void GenericRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.GenericRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sender_id(), output);
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.GenericRequest)
}

::google::protobuf::uint8* GenericRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.GenericRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sender_id(), target);
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.GenericRequest)
  return target;
}

size_t GenericRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.GenericRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sender_id());
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.GenericRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.GenericRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.GenericRequest)
    MergeFrom(*source);
  }
}

void GenericRequest::MergeFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.GenericRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender_id() != 0) {
    set_sender_id(from.sender_id());
  }
  if (from.dest_id() != 0) {
    set_dest_id(from.dest_id());
  }
}

void GenericRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.GenericRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericRequest::CopyFrom(const GenericRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.GenericRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericRequest::IsInitialized() const {
  return true;
}

void GenericRequest::Swap(GenericRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericRequest::InternalSwap(GenericRequest* other) {
  using std::swap;
  swap(sender_id_, other->sender_id_);
  swap(dest_id_, other->dest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericRequest::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenericReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericReply::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericReply::GenericReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_GenericReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.GenericReply)
}
GenericReply::GenericReply(const GenericReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:bbque.GenericReply)
}

void GenericReply::SharedCtor() {
  value_ = 0;
}

GenericReply::~GenericReply() {
  // @@protoc_insertion_point(destructor:bbque.GenericReply)
  SharedDtor();
}

void GenericReply::SharedDtor() {
}

void GenericReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenericReply::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericReply& GenericReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_GenericReply.base);
  return *internal_default_instance();
}


void GenericReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.GenericReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool GenericReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.GenericReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bbque.GenericReply.Code value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::bbque::GenericReply_Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.GenericReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.GenericReply)
  return false;
#undef DO_
}

void GenericReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.GenericReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.GenericReply.Code value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.GenericReply)
}

::google::protobuf::uint8* GenericReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.GenericReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.GenericReply.Code value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.GenericReply)
  return target;
}

size_t GenericReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.GenericReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bbque.GenericReply.Code value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenericReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.GenericReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.GenericReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.GenericReply)
    MergeFrom(*source);
  }
}

void GenericReply::MergeFrom(const GenericReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.GenericReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void GenericReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.GenericReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericReply::CopyFrom(const GenericReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.GenericReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericReply::IsInitialized() const {
  return true;
}

void GenericReply::Swap(GenericReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericReply::InternalSwap(GenericReply* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenericReply::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoverRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoverRequest::kIamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoverRequest::DiscoverRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_DiscoverRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.DiscoverRequest)
}
DiscoverRequest::DiscoverRequest(const DiscoverRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iam_ = from.iam_;
  // @@protoc_insertion_point(copy_constructor:bbque.DiscoverRequest)
}

void DiscoverRequest::SharedCtor() {
  iam_ = 0;
}

DiscoverRequest::~DiscoverRequest() {
  // @@protoc_insertion_point(destructor:bbque.DiscoverRequest)
  SharedDtor();
}

void DiscoverRequest::SharedDtor() {
}

void DiscoverRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoverRequest::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoverRequest& DiscoverRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_DiscoverRequest.base);
  return *internal_default_instance();
}


void DiscoverRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.DiscoverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iam_ = 0;
  _internal_metadata_.Clear();
}

bool DiscoverRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.DiscoverRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bbque.DiscoverRequest.IAm iam = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_iam(static_cast< ::bbque::DiscoverRequest_IAm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.DiscoverRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.DiscoverRequest)
  return false;
#undef DO_
}

void DiscoverRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.DiscoverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.DiscoverRequest.IAm iam = 1;
  if (this->iam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->iam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.DiscoverRequest)
}

::google::protobuf::uint8* DiscoverRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.DiscoverRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.DiscoverRequest.IAm iam = 1;
  if (this->iam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->iam(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.DiscoverRequest)
  return target;
}

size_t DiscoverRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.DiscoverRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bbque.DiscoverRequest.IAm iam = 1;
  if (this->iam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->iam());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoverRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.DiscoverRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoverRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoverRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.DiscoverRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.DiscoverRequest)
    MergeFrom(*source);
  }
}

void DiscoverRequest::MergeFrom(const DiscoverRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.DiscoverRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iam() != 0) {
    set_iam(from.iam());
  }
}

void DiscoverRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.DiscoverRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoverRequest::CopyFrom(const DiscoverRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.DiscoverRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverRequest::IsInitialized() const {
  return true;
}

void DiscoverRequest::Swap(DiscoverRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoverRequest::InternalSwap(DiscoverRequest* other) {
  using std::swap;
  swap(iam_, other->iam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoverRequest::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DiscoverReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DiscoverReply::kIamFieldNumber;
const int DiscoverReply::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DiscoverReply::DiscoverReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_DiscoverReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.DiscoverReply)
}
DiscoverReply::DiscoverReply(const DiscoverReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&iam_, &from.iam_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&iam_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:bbque.DiscoverReply)
}

void DiscoverReply::SharedCtor() {
  ::memset(&iam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&iam_)) + sizeof(id_));
}

DiscoverReply::~DiscoverReply() {
  // @@protoc_insertion_point(destructor:bbque.DiscoverReply)
  SharedDtor();
}

void DiscoverReply::SharedDtor() {
}

void DiscoverReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DiscoverReply::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DiscoverReply& DiscoverReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_DiscoverReply.base);
  return *internal_default_instance();
}


void DiscoverReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.DiscoverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&iam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&iam_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool DiscoverReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.DiscoverReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bbque.DiscoverReply.IAm iam = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_iam(static_cast< ::bbque::DiscoverReply_IAm >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.DiscoverReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.DiscoverReply)
  return false;
#undef DO_
}

void DiscoverReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.DiscoverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.DiscoverReply.IAm iam = 1;
  if (this->iam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->iam(), output);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.DiscoverReply)
}

::google::protobuf::uint8* DiscoverReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.DiscoverReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bbque.DiscoverReply.IAm iam = 1;
  if (this->iam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->iam(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.DiscoverReply)
  return target;
}

size_t DiscoverReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.DiscoverReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bbque.DiscoverReply.IAm iam = 1;
  if (this->iam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->iam());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DiscoverReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.DiscoverReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DiscoverReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DiscoverReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.DiscoverReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.DiscoverReply)
    MergeFrom(*source);
  }
}

void DiscoverReply::MergeFrom(const DiscoverReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.DiscoverReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iam() != 0) {
    set_iam(from.iam());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DiscoverReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.DiscoverReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DiscoverReply::CopyFrom(const DiscoverReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.DiscoverReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DiscoverReply::IsInitialized() const {
  return true;
}

void DiscoverReply::Swap(DiscoverReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DiscoverReply::InternalSwap(DiscoverReply* other) {
  using std::swap;
  swap(iam_, other->iam_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DiscoverReply::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceStatusRequest::kSenderIdFieldNumber;
const int ResourceStatusRequest::kDestIdFieldNumber;
const int ResourceStatusRequest::kPathFieldNumber;
const int ResourceStatusRequest::kAverageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceStatusRequest::ResourceStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_ResourceStatusRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.ResourceStatusRequest)
}
ResourceStatusRequest::ResourceStatusRequest(const ResourceStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&average_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(average_));
  // @@protoc_insertion_point(copy_constructor:bbque.ResourceStatusRequest)
}

void ResourceStatusRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&average_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(average_));
}

ResourceStatusRequest::~ResourceStatusRequest() {
  // @@protoc_insertion_point(destructor:bbque.ResourceStatusRequest)
  SharedDtor();
}

void ResourceStatusRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceStatusRequest::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceStatusRequest& ResourceStatusRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_ResourceStatusRequest.base);
  return *internal_default_instance();
}


void ResourceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.ResourceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&average_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(average_));
  _internal_metadata_.Clear();
}

bool ResourceStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.ResourceStatusRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sender_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bbque.ResourceStatusRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool average = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &average_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.ResourceStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.ResourceStatusRequest)
  return false;
#undef DO_
}

void ResourceStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.ResourceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sender_id(), output);
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dest_id(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bbque.ResourceStatusRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // bool average = 4;
  if (this->average() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->average(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.ResourceStatusRequest)
}

::google::protobuf::uint8* ResourceStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.ResourceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sender_id(), target);
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dest_id(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bbque.ResourceStatusRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // bool average = 4;
  if (this->average() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->average(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.ResourceStatusRequest)
  return target;
}

size_t ResourceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.ResourceStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sender_id());
  }

  // uint32 dest_id = 2;
  if (this->dest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest_id());
  }

  // bool average = 4;
  if (this->average() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.ResourceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.ResourceStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.ResourceStatusRequest)
    MergeFrom(*source);
  }
}

void ResourceStatusRequest::MergeFrom(const ResourceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.ResourceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.sender_id() != 0) {
    set_sender_id(from.sender_id());
  }
  if (from.dest_id() != 0) {
    set_dest_id(from.dest_id());
  }
  if (from.average() != 0) {
    set_average(from.average());
  }
}

void ResourceStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.ResourceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceStatusRequest::CopyFrom(const ResourceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.ResourceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceStatusRequest::IsInitialized() const {
  return true;
}

void ResourceStatusRequest::Swap(ResourceStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceStatusRequest::InternalSwap(ResourceStatusRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sender_id_, other->sender_id_);
  swap(dest_id_, other->dest_id_);
  swap(average_, other->average_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceStatusRequest::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceStatusReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceStatusReply::kTotalFieldNumber;
const int ResourceStatusReply::kUsedFieldNumber;
const int ResourceStatusReply::kDegradationFieldNumber;
const int ResourceStatusReply::kTemperatureFieldNumber;
const int ResourceStatusReply::kPowerMwFieldNumber;
const int ResourceStatusReply::kLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceStatusReply::ResourceStatusReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_ResourceStatusReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.ResourceStatusReply)
}
ResourceStatusReply::ResourceStatusReply(const ResourceStatusReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&load_) -
    reinterpret_cast<char*>(&total_)) + sizeof(load_));
  // @@protoc_insertion_point(copy_constructor:bbque.ResourceStatusReply)
}

void ResourceStatusReply::SharedCtor() {
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_) -
      reinterpret_cast<char*>(&total_)) + sizeof(load_));
}

ResourceStatusReply::~ResourceStatusReply() {
  // @@protoc_insertion_point(destructor:bbque.ResourceStatusReply)
  SharedDtor();
}

void ResourceStatusReply::SharedDtor() {
}

void ResourceStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceStatusReply::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceStatusReply& ResourceStatusReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_ResourceStatusReply.base);
  return *internal_default_instance();
}


void ResourceStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.ResourceStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&load_) -
      reinterpret_cast<char*>(&total_)) + sizeof(load_));
  _internal_metadata_.Clear();
}

bool ResourceStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.ResourceStatusReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 used = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &used_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 degradation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &degradation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 temperature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 power_mw = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_mw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 load = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.ResourceStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.ResourceStatusReply)
  return false;
#undef DO_
}

void ResourceStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.ResourceStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total = 1;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->total(), output);
  }

  // uint64 used = 2;
  if (this->used() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->used(), output);
  }

  // uint32 degradation = 3;
  if (this->degradation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->degradation(), output);
  }

  // uint32 temperature = 4;
  if (this->temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->temperature(), output);
  }

  // uint32 power_mw = 5;
  if (this->power_mw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->power_mw(), output);
  }

  // uint32 load = 6;
  if (this->load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->load(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.ResourceStatusReply)
}

::google::protobuf::uint8* ResourceStatusReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.ResourceStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 total = 1;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->total(), target);
  }

  // uint64 used = 2;
  if (this->used() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->used(), target);
  }

  // uint32 degradation = 3;
  if (this->degradation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->degradation(), target);
  }

  // uint32 temperature = 4;
  if (this->temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->temperature(), target);
  }

  // uint32 power_mw = 5;
  if (this->power_mw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->power_mw(), target);
  }

  // uint32 load = 6;
  if (this->load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->load(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.ResourceStatusReply)
  return target;
}

size_t ResourceStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.ResourceStatusReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 total = 1;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total());
  }

  // uint64 used = 2;
  if (this->used() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->used());
  }

  // uint32 degradation = 3;
  if (this->degradation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->degradation());
  }

  // uint32 temperature = 4;
  if (this->temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->temperature());
  }

  // uint32 power_mw = 5;
  if (this->power_mw() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->power_mw());
  }

  // uint32 load = 6;
  if (this->load() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->load());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.ResourceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceStatusReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceStatusReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.ResourceStatusReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.ResourceStatusReply)
    MergeFrom(*source);
  }
}

void ResourceStatusReply::MergeFrom(const ResourceStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.ResourceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.used() != 0) {
    set_used(from.used());
  }
  if (from.degradation() != 0) {
    set_degradation(from.degradation());
  }
  if (from.temperature() != 0) {
    set_temperature(from.temperature());
  }
  if (from.power_mw() != 0) {
    set_power_mw(from.power_mw());
  }
  if (from.load() != 0) {
    set_load(from.load());
  }
}

void ResourceStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.ResourceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceStatusReply::CopyFrom(const ResourceStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.ResourceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceStatusReply::IsInitialized() const {
  return true;
}

void ResourceStatusReply::Swap(ResourceStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceStatusReply::InternalSwap(ResourceStatusReply* other) {
  using std::swap;
  swap(total_, other->total_);
  swap(used_, other->used_);
  swap(degradation_, other->degradation_);
  swap(temperature_, other->temperature_);
  swap(power_mw_, other->power_mw_);
  swap(load_, other->load_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceStatusReply::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorkloadStatusReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkloadStatusReply::kNrReadyFieldNumber;
const int WorkloadStatusReply::kNrRunningFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkloadStatusReply::WorkloadStatusReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_WorkloadStatusReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.WorkloadStatusReply)
}
WorkloadStatusReply::WorkloadStatusReply(const WorkloadStatusReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nr_ready_, &from.nr_ready_,
    static_cast<size_t>(reinterpret_cast<char*>(&nr_running_) -
    reinterpret_cast<char*>(&nr_ready_)) + sizeof(nr_running_));
  // @@protoc_insertion_point(copy_constructor:bbque.WorkloadStatusReply)
}

void WorkloadStatusReply::SharedCtor() {
  ::memset(&nr_ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nr_running_) -
      reinterpret_cast<char*>(&nr_ready_)) + sizeof(nr_running_));
}

WorkloadStatusReply::~WorkloadStatusReply() {
  // @@protoc_insertion_point(destructor:bbque.WorkloadStatusReply)
  SharedDtor();
}

void WorkloadStatusReply::SharedDtor() {
}

void WorkloadStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorkloadStatusReply::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorkloadStatusReply& WorkloadStatusReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_WorkloadStatusReply.base);
  return *internal_default_instance();
}


void WorkloadStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.WorkloadStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nr_ready_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nr_running_) -
      reinterpret_cast<char*>(&nr_ready_)) + sizeof(nr_running_));
  _internal_metadata_.Clear();
}

bool WorkloadStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.WorkloadStatusReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nr_ready = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nr_ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nr_running = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nr_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.WorkloadStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.WorkloadStatusReply)
  return false;
#undef DO_
}

void WorkloadStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.WorkloadStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nr_ready = 1;
  if (this->nr_ready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nr_ready(), output);
  }

  // uint32 nr_running = 2;
  if (this->nr_running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nr_running(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.WorkloadStatusReply)
}

::google::protobuf::uint8* WorkloadStatusReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.WorkloadStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nr_ready = 1;
  if (this->nr_ready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nr_ready(), target);
  }

  // uint32 nr_running = 2;
  if (this->nr_running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nr_running(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.WorkloadStatusReply)
  return target;
}

size_t WorkloadStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.WorkloadStatusReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 nr_ready = 1;
  if (this->nr_ready() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nr_ready());
  }

  // uint32 nr_running = 2;
  if (this->nr_running() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nr_running());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorkloadStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.WorkloadStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const WorkloadStatusReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkloadStatusReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.WorkloadStatusReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.WorkloadStatusReply)
    MergeFrom(*source);
  }
}

void WorkloadStatusReply::MergeFrom(const WorkloadStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.WorkloadStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nr_ready() != 0) {
    set_nr_ready(from.nr_ready());
  }
  if (from.nr_running() != 0) {
    set_nr_running(from.nr_running());
  }
}

void WorkloadStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.WorkloadStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkloadStatusReply::CopyFrom(const WorkloadStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.WorkloadStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorkloadStatusReply::IsInitialized() const {
  return true;
}

void WorkloadStatusReply::Swap(WorkloadStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkloadStatusReply::InternalSwap(WorkloadStatusReply* other) {
  using std::swap;
  swap(nr_ready_, other->nr_ready_);
  swap(nr_running_, other->nr_running_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorkloadStatusReply::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelStatusReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelStatusReply::kConnectedFieldNumber;
const int ChannelStatusReply::kLatencyMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelStatusReply::ChannelStatusReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_ChannelStatusReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.ChannelStatusReply)
}
ChannelStatusReply::ChannelStatusReply(const ChannelStatusReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&connected_, &from.connected_,
    static_cast<size_t>(reinterpret_cast<char*>(&latency_ms_) -
    reinterpret_cast<char*>(&connected_)) + sizeof(latency_ms_));
  // @@protoc_insertion_point(copy_constructor:bbque.ChannelStatusReply)
}

void ChannelStatusReply::SharedCtor() {
  ::memset(&connected_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latency_ms_) -
      reinterpret_cast<char*>(&connected_)) + sizeof(latency_ms_));
}

ChannelStatusReply::~ChannelStatusReply() {
  // @@protoc_insertion_point(destructor:bbque.ChannelStatusReply)
  SharedDtor();
}

void ChannelStatusReply::SharedDtor() {
}

void ChannelStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelStatusReply::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelStatusReply& ChannelStatusReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_ChannelStatusReply.base);
  return *internal_default_instance();
}


void ChannelStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.ChannelStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&connected_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latency_ms_) -
      reinterpret_cast<char*>(&connected_)) + sizeof(latency_ms_));
  _internal_metadata_.Clear();
}

bool ChannelStatusReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.ChannelStatusReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool connected = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 latency_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &latency_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.ChannelStatusReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.ChannelStatusReply)
  return false;
#undef DO_
}

void ChannelStatusReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.ChannelStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->connected(), output);
  }

  // uint32 latency_ms = 2;
  if (this->latency_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->latency_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.ChannelStatusReply)
}

::google::protobuf::uint8* ChannelStatusReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.ChannelStatusReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->connected(), target);
  }

  // uint32 latency_ms = 2;
  if (this->latency_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->latency_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.ChannelStatusReply)
  return target;
}

size_t ChannelStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.ChannelStatusReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool connected = 1;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  // uint32 latency_ms = 2;
  if (this->latency_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->latency_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelStatusReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.ChannelStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelStatusReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelStatusReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.ChannelStatusReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.ChannelStatusReply)
    MergeFrom(*source);
  }
}

void ChannelStatusReply::MergeFrom(const ChannelStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.ChannelStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connected() != 0) {
    set_connected(from.connected());
  }
  if (from.latency_ms() != 0) {
    set_latency_ms(from.latency_ms());
  }
}

void ChannelStatusReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.ChannelStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelStatusReply::CopyFrom(const ChannelStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.ChannelStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelStatusReply::IsInitialized() const {
  return true;
}

void ChannelStatusReply::Swap(ChannelStatusReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelStatusReply::InternalSwap(ChannelStatusReply* other) {
  using std::swap;
  swap(connected_, other->connected_);
  swap(latency_ms_, other->latency_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelStatusReply::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NodeManagementRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeManagementRequest::kSenderIdFieldNumber;
const int NodeManagementRequest::kValueFieldNumber;
const int NodeManagementRequest::kPartitionNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeManagementRequest::NodeManagementRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_NodeManagementRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.NodeManagementRequest)
}
NodeManagementRequest::NodeManagementRequest(const NodeManagementRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&partition_num_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(partition_num_));
  // @@protoc_insertion_point(copy_constructor:bbque.NodeManagementRequest)
}

void NodeManagementRequest::SharedCtor() {
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_num_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(partition_num_));
}

NodeManagementRequest::~NodeManagementRequest() {
  // @@protoc_insertion_point(destructor:bbque.NodeManagementRequest)
  SharedDtor();
}

void NodeManagementRequest::SharedDtor() {
}

void NodeManagementRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NodeManagementRequest::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeManagementRequest& NodeManagementRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_NodeManagementRequest.base);
  return *internal_default_instance();
}


void NodeManagementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.NodeManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_num_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(partition_num_));
  _internal_metadata_.Clear();
}

bool NodeManagementRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.NodeManagementRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sender_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bbque.NodeManagementRequest.Action value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value(static_cast< ::bbque::NodeManagementRequest_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 partition_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partition_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.NodeManagementRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.NodeManagementRequest)
  return false;
#undef DO_
}

void NodeManagementRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.NodeManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sender_id(), output);
  }

  // .bbque.NodeManagementRequest.Action value = 2;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value(), output);
  }

  // uint32 partition_num = 3;
  if (this->partition_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->partition_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.NodeManagementRequest)
}

::google::protobuf::uint8* NodeManagementRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.NodeManagementRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sender_id(), target);
  }

  // .bbque.NodeManagementRequest.Action value = 2;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value(), target);
  }

  // uint32 partition_num = 3;
  if (this->partition_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->partition_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.NodeManagementRequest)
  return target;
}

size_t NodeManagementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.NodeManagementRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sender_id());
  }

  // .bbque.NodeManagementRequest.Action value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value());
  }

  // uint32 partition_num = 3;
  if (this->partition_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->partition_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeManagementRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.NodeManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeManagementRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeManagementRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.NodeManagementRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.NodeManagementRequest)
    MergeFrom(*source);
  }
}

void NodeManagementRequest::MergeFrom(const NodeManagementRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.NodeManagementRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender_id() != 0) {
    set_sender_id(from.sender_id());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.partition_num() != 0) {
    set_partition_num(from.partition_num());
  }
}

void NodeManagementRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.NodeManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeManagementRequest::CopyFrom(const NodeManagementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.NodeManagementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeManagementRequest::IsInitialized() const {
  return true;
}

void NodeManagementRequest::Swap(NodeManagementRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeManagementRequest::InternalSwap(NodeManagementRequest* other) {
  using std::swap;
  swap(sender_id_, other->sender_id_);
  swap(value_, other->value_);
  swap(partition_num_, other->partition_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NodeManagementRequest::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ApplicationSchedulingRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ApplicationSchedulingRequest::kSenderIdFieldNumber;
const int ApplicationSchedulingRequest::kAppIdFieldNumber;
const int ApplicationSchedulingRequest::kAppNameFieldNumber;
const int ApplicationSchedulingRequest::kAwmIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ApplicationSchedulingRequest::ApplicationSchedulingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_agent_5fcom_2eproto::scc_info_ApplicationSchedulingRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:bbque.ApplicationSchedulingRequest)
}
ApplicationSchedulingRequest::ApplicationSchedulingRequest(const ApplicationSchedulingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&awm_id_) -
    reinterpret_cast<char*>(&sender_id_)) + sizeof(awm_id_));
  // @@protoc_insertion_point(copy_constructor:bbque.ApplicationSchedulingRequest)
}

void ApplicationSchedulingRequest::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&awm_id_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(awm_id_));
}

ApplicationSchedulingRequest::~ApplicationSchedulingRequest() {
  // @@protoc_insertion_point(destructor:bbque.ApplicationSchedulingRequest)
  SharedDtor();
}

void ApplicationSchedulingRequest::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ApplicationSchedulingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ApplicationSchedulingRequest::descriptor() {
  ::protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ApplicationSchedulingRequest& ApplicationSchedulingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_agent_5fcom_2eproto::scc_info_ApplicationSchedulingRequest.base);
  return *internal_default_instance();
}


void ApplicationSchedulingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bbque.ApplicationSchedulingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&awm_id_) -
      reinterpret_cast<char*>(&sender_id_)) + sizeof(awm_id_));
  _internal_metadata_.Clear();
}

bool ApplicationSchedulingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bbque.ApplicationSchedulingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sender_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bbque.ApplicationSchedulingRequest.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 awm_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awm_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bbque.ApplicationSchedulingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bbque.ApplicationSchedulingRequest)
  return false;
#undef DO_
}

void ApplicationSchedulingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bbque.ApplicationSchedulingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sender_id(), output);
  }

  // uint32 app_id = 2;
  if (this->app_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // string app_name = 3;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bbque.ApplicationSchedulingRequest.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app_name(), output);
  }

  // int32 awm_id = 4;
  if (this->awm_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->awm_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bbque.ApplicationSchedulingRequest)
}

::google::protobuf::uint8* ApplicationSchedulingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bbque.ApplicationSchedulingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sender_id(), target);
  }

  // uint32 app_id = 2;
  if (this->app_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // string app_name = 3;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bbque.ApplicationSchedulingRequest.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app_name(), target);
  }

  // int32 awm_id = 4;
  if (this->awm_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->awm_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bbque.ApplicationSchedulingRequest)
  return target;
}

size_t ApplicationSchedulingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bbque.ApplicationSchedulingRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string app_name = 3;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // uint32 sender_id = 1;
  if (this->sender_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sender_id());
  }

  // uint32 app_id = 2;
  if (this->app_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  // int32 awm_id = 4;
  if (this->awm_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->awm_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationSchedulingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bbque.ApplicationSchedulingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationSchedulingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ApplicationSchedulingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bbque.ApplicationSchedulingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bbque.ApplicationSchedulingRequest)
    MergeFrom(*source);
  }
}

void ApplicationSchedulingRequest::MergeFrom(const ApplicationSchedulingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bbque.ApplicationSchedulingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.sender_id() != 0) {
    set_sender_id(from.sender_id());
  }
  if (from.app_id() != 0) {
    set_app_id(from.app_id());
  }
  if (from.awm_id() != 0) {
    set_awm_id(from.awm_id());
  }
}

void ApplicationSchedulingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bbque.ApplicationSchedulingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationSchedulingRequest::CopyFrom(const ApplicationSchedulingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bbque.ApplicationSchedulingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationSchedulingRequest::IsInitialized() const {
  return true;
}

void ApplicationSchedulingRequest::Swap(ApplicationSchedulingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ApplicationSchedulingRequest::InternalSwap(ApplicationSchedulingRequest* other) {
  using std::swap;
  app_name_.Swap(&other->app_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sender_id_, other->sender_id_);
  swap(app_id_, other->app_id_);
  swap(awm_id_, other->awm_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ApplicationSchedulingRequest::GetMetadata() const {
  protobuf_agent_5fcom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_agent_5fcom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bbque
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::GenericRequest* Arena::CreateMaybeMessage< ::bbque::GenericRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::GenericRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::GenericReply* Arena::CreateMaybeMessage< ::bbque::GenericReply >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::GenericReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::DiscoverRequest* Arena::CreateMaybeMessage< ::bbque::DiscoverRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::DiscoverRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::DiscoverReply* Arena::CreateMaybeMessage< ::bbque::DiscoverReply >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::DiscoverReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::ResourceStatusRequest* Arena::CreateMaybeMessage< ::bbque::ResourceStatusRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::ResourceStatusRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::ResourceStatusReply* Arena::CreateMaybeMessage< ::bbque::ResourceStatusReply >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::ResourceStatusReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::WorkloadStatusReply* Arena::CreateMaybeMessage< ::bbque::WorkloadStatusReply >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::WorkloadStatusReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::ChannelStatusReply* Arena::CreateMaybeMessage< ::bbque::ChannelStatusReply >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::ChannelStatusReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::NodeManagementRequest* Arena::CreateMaybeMessage< ::bbque::NodeManagementRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::NodeManagementRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::bbque::ApplicationSchedulingRequest* Arena::CreateMaybeMessage< ::bbque::ApplicationSchedulingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bbque::ApplicationSchedulingRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
