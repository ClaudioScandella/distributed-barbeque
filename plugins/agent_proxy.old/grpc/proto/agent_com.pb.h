// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent_com.proto

#ifndef PROTOBUF_INCLUDED_agent_5fcom_2eproto
#define PROTOBUF_INCLUDED_agent_5fcom_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_agent_5fcom_2eproto 

namespace protobuf_agent_5fcom_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_agent_5fcom_2eproto
namespace bbque {
class ApplicationSchedulingRequest;
class ApplicationSchedulingRequestDefaultTypeInternal;
extern ApplicationSchedulingRequestDefaultTypeInternal _ApplicationSchedulingRequest_default_instance_;
class ChannelStatusReply;
class ChannelStatusReplyDefaultTypeInternal;
extern ChannelStatusReplyDefaultTypeInternal _ChannelStatusReply_default_instance_;
class GenericReply;
class GenericReplyDefaultTypeInternal;
extern GenericReplyDefaultTypeInternal _GenericReply_default_instance_;
class GenericRequest;
class GenericRequestDefaultTypeInternal;
extern GenericRequestDefaultTypeInternal _GenericRequest_default_instance_;
class NodeManagementRequest;
class NodeManagementRequestDefaultTypeInternal;
extern NodeManagementRequestDefaultTypeInternal _NodeManagementRequest_default_instance_;
class ResourceStatusReply;
class ResourceStatusReplyDefaultTypeInternal;
extern ResourceStatusReplyDefaultTypeInternal _ResourceStatusReply_default_instance_;
class ResourceStatusRequest;
class ResourceStatusRequestDefaultTypeInternal;
extern ResourceStatusRequestDefaultTypeInternal _ResourceStatusRequest_default_instance_;
class WorkloadStatusReply;
class WorkloadStatusReplyDefaultTypeInternal;
extern WorkloadStatusReplyDefaultTypeInternal _WorkloadStatusReply_default_instance_;
}  // namespace bbque
namespace google {
namespace protobuf {
template<> ::bbque::ApplicationSchedulingRequest* Arena::CreateMaybeMessage<::bbque::ApplicationSchedulingRequest>(Arena*);
template<> ::bbque::ChannelStatusReply* Arena::CreateMaybeMessage<::bbque::ChannelStatusReply>(Arena*);
template<> ::bbque::GenericReply* Arena::CreateMaybeMessage<::bbque::GenericReply>(Arena*);
template<> ::bbque::GenericRequest* Arena::CreateMaybeMessage<::bbque::GenericRequest>(Arena*);
template<> ::bbque::NodeManagementRequest* Arena::CreateMaybeMessage<::bbque::NodeManagementRequest>(Arena*);
template<> ::bbque::ResourceStatusReply* Arena::CreateMaybeMessage<::bbque::ResourceStatusReply>(Arena*);
template<> ::bbque::ResourceStatusRequest* Arena::CreateMaybeMessage<::bbque::ResourceStatusRequest>(Arena*);
template<> ::bbque::WorkloadStatusReply* Arena::CreateMaybeMessage<::bbque::WorkloadStatusReply>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace bbque {

enum GenericReply_Code {
  GenericReply_Code_OK = 0,
  GenericReply_Code_AGENT_UNREACHABLE = 1,
  GenericReply_Code_AGENT_DISCONNECTED = 2,
  GenericReply_Code_REQUEST_REJECTED = 3,
  GenericReply_Code_GenericReply_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GenericReply_Code_GenericReply_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GenericReply_Code_IsValid(int value);
const GenericReply_Code GenericReply_Code_Code_MIN = GenericReply_Code_OK;
const GenericReply_Code GenericReply_Code_Code_MAX = GenericReply_Code_REQUEST_REJECTED;
const int GenericReply_Code_Code_ARRAYSIZE = GenericReply_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* GenericReply_Code_descriptor();
inline const ::std::string& GenericReply_Code_Name(GenericReply_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    GenericReply_Code_descriptor(), value);
}
inline bool GenericReply_Code_Parse(
    const ::std::string& name, GenericReply_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GenericReply_Code>(
    GenericReply_Code_descriptor(), name, value);
}
enum NodeManagementRequest_Action {
  NodeManagementRequest_Action_JOIN = 0,
  NodeManagementRequest_Action_DISJOIN = 1,
  NodeManagementRequest_Action_CHECK = 2,
  NodeManagementRequest_Action_NodeManagementRequest_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NodeManagementRequest_Action_NodeManagementRequest_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NodeManagementRequest_Action_IsValid(int value);
const NodeManagementRequest_Action NodeManagementRequest_Action_Action_MIN = NodeManagementRequest_Action_JOIN;
const NodeManagementRequest_Action NodeManagementRequest_Action_Action_MAX = NodeManagementRequest_Action_CHECK;
const int NodeManagementRequest_Action_Action_ARRAYSIZE = NodeManagementRequest_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeManagementRequest_Action_descriptor();
inline const ::std::string& NodeManagementRequest_Action_Name(NodeManagementRequest_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeManagementRequest_Action_descriptor(), value);
}
inline bool NodeManagementRequest_Action_Parse(
    const ::std::string& name, NodeManagementRequest_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeManagementRequest_Action>(
    NodeManagementRequest_Action_descriptor(), name, value);
}
// ===================================================================

class GenericRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.GenericRequest) */ {
 public:
  GenericRequest();
  virtual ~GenericRequest();

  GenericRequest(const GenericRequest& from);

  inline GenericRequest& operator=(const GenericRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenericRequest(GenericRequest&& from) noexcept
    : GenericRequest() {
    *this = ::std::move(from);
  }

  inline GenericRequest& operator=(GenericRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericRequest* internal_default_instance() {
    return reinterpret_cast<const GenericRequest*>(
               &_GenericRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GenericRequest* other);
  friend void swap(GenericRequest& a, GenericRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenericRequest* New() const final {
    return CreateMaybeMessage<GenericRequest>(NULL);
  }

  GenericRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenericRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenericRequest& from);
  void MergeFrom(const GenericRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 sender_id = 1;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_id() const;
  void set_sender_id(::google::protobuf::uint32 value);

  // uint32 dest_id = 2;
  void clear_dest_id();
  static const int kDestIdFieldNumber = 2;
  ::google::protobuf::uint32 dest_id() const;
  void set_dest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bbque.GenericRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sender_id_;
  ::google::protobuf::uint32 dest_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenericReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.GenericReply) */ {
 public:
  GenericReply();
  virtual ~GenericReply();

  GenericReply(const GenericReply& from);

  inline GenericReply& operator=(const GenericReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GenericReply(GenericReply&& from) noexcept
    : GenericReply() {
    *this = ::std::move(from);
  }

  inline GenericReply& operator=(GenericReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GenericReply* internal_default_instance() {
    return reinterpret_cast<const GenericReply*>(
               &_GenericReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GenericReply* other);
  friend void swap(GenericReply& a, GenericReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GenericReply* New() const final {
    return CreateMaybeMessage<GenericReply>(NULL);
  }

  GenericReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GenericReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GenericReply& from);
  void MergeFrom(const GenericReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GenericReply_Code Code;
  static const Code OK =
    GenericReply_Code_OK;
  static const Code AGENT_UNREACHABLE =
    GenericReply_Code_AGENT_UNREACHABLE;
  static const Code AGENT_DISCONNECTED =
    GenericReply_Code_AGENT_DISCONNECTED;
  static const Code REQUEST_REJECTED =
    GenericReply_Code_REQUEST_REJECTED;
  static inline bool Code_IsValid(int value) {
    return GenericReply_Code_IsValid(value);
  }
  static const Code Code_MIN =
    GenericReply_Code_Code_MIN;
  static const Code Code_MAX =
    GenericReply_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    GenericReply_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return GenericReply_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return GenericReply_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return GenericReply_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .bbque.GenericReply.Code value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::bbque::GenericReply_Code value() const;
  void set_value(::bbque::GenericReply_Code value);

  // @@protoc_insertion_point(class_scope:bbque.GenericReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.ResourceStatusRequest) */ {
 public:
  ResourceStatusRequest();
  virtual ~ResourceStatusRequest();

  ResourceStatusRequest(const ResourceStatusRequest& from);

  inline ResourceStatusRequest& operator=(const ResourceStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceStatusRequest(ResourceStatusRequest&& from) noexcept
    : ResourceStatusRequest() {
    *this = ::std::move(from);
  }

  inline ResourceStatusRequest& operator=(ResourceStatusRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceStatusRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceStatusRequest* internal_default_instance() {
    return reinterpret_cast<const ResourceStatusRequest*>(
               &_ResourceStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ResourceStatusRequest* other);
  friend void swap(ResourceStatusRequest& a, ResourceStatusRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceStatusRequest* New() const final {
    return CreateMaybeMessage<ResourceStatusRequest>(NULL);
  }

  ResourceStatusRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceStatusRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceStatusRequest& from);
  void MergeFrom(const ResourceStatusRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 3;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // uint32 sender_id = 1;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_id() const;
  void set_sender_id(::google::protobuf::uint32 value);

  // uint32 dest_id = 2;
  void clear_dest_id();
  static const int kDestIdFieldNumber = 2;
  ::google::protobuf::uint32 dest_id() const;
  void set_dest_id(::google::protobuf::uint32 value);

  // bool average = 4;
  void clear_average();
  static const int kAverageFieldNumber = 4;
  bool average() const;
  void set_average(bool value);

  // @@protoc_insertion_point(class_scope:bbque.ResourceStatusRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::uint32 sender_id_;
  ::google::protobuf::uint32 dest_id_;
  bool average_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceStatusReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.ResourceStatusReply) */ {
 public:
  ResourceStatusReply();
  virtual ~ResourceStatusReply();

  ResourceStatusReply(const ResourceStatusReply& from);

  inline ResourceStatusReply& operator=(const ResourceStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceStatusReply(ResourceStatusReply&& from) noexcept
    : ResourceStatusReply() {
    *this = ::std::move(from);
  }

  inline ResourceStatusReply& operator=(ResourceStatusReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceStatusReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceStatusReply* internal_default_instance() {
    return reinterpret_cast<const ResourceStatusReply*>(
               &_ResourceStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ResourceStatusReply* other);
  friend void swap(ResourceStatusReply& a, ResourceStatusReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceStatusReply* New() const final {
    return CreateMaybeMessage<ResourceStatusReply>(NULL);
  }

  ResourceStatusReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceStatusReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceStatusReply& from);
  void MergeFrom(const ResourceStatusReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceStatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 total = 1;
  void clear_total();
  static const int kTotalFieldNumber = 1;
  ::google::protobuf::uint64 total() const;
  void set_total(::google::protobuf::uint64 value);

  // uint64 used = 2;
  void clear_used();
  static const int kUsedFieldNumber = 2;
  ::google::protobuf::uint64 used() const;
  void set_used(::google::protobuf::uint64 value);

  // uint32 degradation = 3;
  void clear_degradation();
  static const int kDegradationFieldNumber = 3;
  ::google::protobuf::uint32 degradation() const;
  void set_degradation(::google::protobuf::uint32 value);

  // uint32 temperature = 4;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 4;
  ::google::protobuf::uint32 temperature() const;
  void set_temperature(::google::protobuf::uint32 value);

  // uint32 power_mw = 5;
  void clear_power_mw();
  static const int kPowerMwFieldNumber = 5;
  ::google::protobuf::uint32 power_mw() const;
  void set_power_mw(::google::protobuf::uint32 value);

  // uint32 load = 6;
  void clear_load();
  static const int kLoadFieldNumber = 6;
  ::google::protobuf::uint32 load() const;
  void set_load(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bbque.ResourceStatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 total_;
  ::google::protobuf::uint64 used_;
  ::google::protobuf::uint32 degradation_;
  ::google::protobuf::uint32 temperature_;
  ::google::protobuf::uint32 power_mw_;
  ::google::protobuf::uint32 load_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorkloadStatusReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.WorkloadStatusReply) */ {
 public:
  WorkloadStatusReply();
  virtual ~WorkloadStatusReply();

  WorkloadStatusReply(const WorkloadStatusReply& from);

  inline WorkloadStatusReply& operator=(const WorkloadStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorkloadStatusReply(WorkloadStatusReply&& from) noexcept
    : WorkloadStatusReply() {
    *this = ::std::move(from);
  }

  inline WorkloadStatusReply& operator=(WorkloadStatusReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorkloadStatusReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorkloadStatusReply* internal_default_instance() {
    return reinterpret_cast<const WorkloadStatusReply*>(
               &_WorkloadStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(WorkloadStatusReply* other);
  friend void swap(WorkloadStatusReply& a, WorkloadStatusReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorkloadStatusReply* New() const final {
    return CreateMaybeMessage<WorkloadStatusReply>(NULL);
  }

  WorkloadStatusReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorkloadStatusReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorkloadStatusReply& from);
  void MergeFrom(const WorkloadStatusReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorkloadStatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 nr_ready = 1;
  void clear_nr_ready();
  static const int kNrReadyFieldNumber = 1;
  ::google::protobuf::uint32 nr_ready() const;
  void set_nr_ready(::google::protobuf::uint32 value);

  // uint32 nr_running = 2;
  void clear_nr_running();
  static const int kNrRunningFieldNumber = 2;
  ::google::protobuf::uint32 nr_running() const;
  void set_nr_running(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bbque.WorkloadStatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 nr_ready_;
  ::google::protobuf::uint32 nr_running_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChannelStatusReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.ChannelStatusReply) */ {
 public:
  ChannelStatusReply();
  virtual ~ChannelStatusReply();

  ChannelStatusReply(const ChannelStatusReply& from);

  inline ChannelStatusReply& operator=(const ChannelStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChannelStatusReply(ChannelStatusReply&& from) noexcept
    : ChannelStatusReply() {
    *this = ::std::move(from);
  }

  inline ChannelStatusReply& operator=(ChannelStatusReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelStatusReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChannelStatusReply* internal_default_instance() {
    return reinterpret_cast<const ChannelStatusReply*>(
               &_ChannelStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ChannelStatusReply* other);
  friend void swap(ChannelStatusReply& a, ChannelStatusReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChannelStatusReply* New() const final {
    return CreateMaybeMessage<ChannelStatusReply>(NULL);
  }

  ChannelStatusReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ChannelStatusReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ChannelStatusReply& from);
  void MergeFrom(const ChannelStatusReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChannelStatusReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool connected = 1;
  void clear_connected();
  static const int kConnectedFieldNumber = 1;
  bool connected() const;
  void set_connected(bool value);

  // uint32 latency_ms = 2;
  void clear_latency_ms();
  static const int kLatencyMsFieldNumber = 2;
  ::google::protobuf::uint32 latency_ms() const;
  void set_latency_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bbque.ChannelStatusReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool connected_;
  ::google::protobuf::uint32 latency_ms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeManagementRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.NodeManagementRequest) */ {
 public:
  NodeManagementRequest();
  virtual ~NodeManagementRequest();

  NodeManagementRequest(const NodeManagementRequest& from);

  inline NodeManagementRequest& operator=(const NodeManagementRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeManagementRequest(NodeManagementRequest&& from) noexcept
    : NodeManagementRequest() {
    *this = ::std::move(from);
  }

  inline NodeManagementRequest& operator=(NodeManagementRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeManagementRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NodeManagementRequest* internal_default_instance() {
    return reinterpret_cast<const NodeManagementRequest*>(
               &_NodeManagementRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(NodeManagementRequest* other);
  friend void swap(NodeManagementRequest& a, NodeManagementRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeManagementRequest* New() const final {
    return CreateMaybeMessage<NodeManagementRequest>(NULL);
  }

  NodeManagementRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NodeManagementRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NodeManagementRequest& from);
  void MergeFrom(const NodeManagementRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NodeManagementRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NodeManagementRequest_Action Action;
  static const Action JOIN =
    NodeManagementRequest_Action_JOIN;
  static const Action DISJOIN =
    NodeManagementRequest_Action_DISJOIN;
  static const Action CHECK =
    NodeManagementRequest_Action_CHECK;
  static inline bool Action_IsValid(int value) {
    return NodeManagementRequest_Action_IsValid(value);
  }
  static const Action Action_MIN =
    NodeManagementRequest_Action_Action_MIN;
  static const Action Action_MAX =
    NodeManagementRequest_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    NodeManagementRequest_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return NodeManagementRequest_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return NodeManagementRequest_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return NodeManagementRequest_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 sender_id = 1;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_id() const;
  void set_sender_id(::google::protobuf::uint32 value);

  // .bbque.NodeManagementRequest.Action value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::bbque::NodeManagementRequest_Action value() const;
  void set_value(::bbque::NodeManagementRequest_Action value);

  // uint32 partition_num = 3;
  void clear_partition_num();
  static const int kPartitionNumFieldNumber = 3;
  ::google::protobuf::uint32 partition_num() const;
  void set_partition_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bbque.NodeManagementRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sender_id_;
  int value_;
  ::google::protobuf::uint32 partition_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ApplicationSchedulingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bbque.ApplicationSchedulingRequest) */ {
 public:
  ApplicationSchedulingRequest();
  virtual ~ApplicationSchedulingRequest();

  ApplicationSchedulingRequest(const ApplicationSchedulingRequest& from);

  inline ApplicationSchedulingRequest& operator=(const ApplicationSchedulingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplicationSchedulingRequest(ApplicationSchedulingRequest&& from) noexcept
    : ApplicationSchedulingRequest() {
    *this = ::std::move(from);
  }

  inline ApplicationSchedulingRequest& operator=(ApplicationSchedulingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplicationSchedulingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplicationSchedulingRequest* internal_default_instance() {
    return reinterpret_cast<const ApplicationSchedulingRequest*>(
               &_ApplicationSchedulingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ApplicationSchedulingRequest* other);
  friend void swap(ApplicationSchedulingRequest& a, ApplicationSchedulingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplicationSchedulingRequest* New() const final {
    return CreateMaybeMessage<ApplicationSchedulingRequest>(NULL);
  }

  ApplicationSchedulingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplicationSchedulingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplicationSchedulingRequest& from);
  void MergeFrom(const ApplicationSchedulingRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplicationSchedulingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_name = 3;
  void clear_app_name();
  static const int kAppNameFieldNumber = 3;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // uint32 sender_id = 1;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_id() const;
  void set_sender_id(::google::protobuf::uint32 value);

  // uint32 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // int32 awm_id = 4;
  void clear_awm_id();
  static const int kAwmIdFieldNumber = 4;
  ::google::protobuf::int32 awm_id() const;
  void set_awm_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bbque.ApplicationSchedulingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::uint32 sender_id_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::int32 awm_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fcom_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenericRequest

// uint32 sender_id = 1;
inline void GenericRequest::clear_sender_id() {
  sender_id_ = 0u;
}
inline ::google::protobuf::uint32 GenericRequest::sender_id() const {
  // @@protoc_insertion_point(field_get:bbque.GenericRequest.sender_id)
  return sender_id_;
}
inline void GenericRequest::set_sender_id(::google::protobuf::uint32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.GenericRequest.sender_id)
}

// uint32 dest_id = 2;
inline void GenericRequest::clear_dest_id() {
  dest_id_ = 0u;
}
inline ::google::protobuf::uint32 GenericRequest::dest_id() const {
  // @@protoc_insertion_point(field_get:bbque.GenericRequest.dest_id)
  return dest_id_;
}
inline void GenericRequest::set_dest_id(::google::protobuf::uint32 value) {
  
  dest_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.GenericRequest.dest_id)
}

// -------------------------------------------------------------------

// GenericReply

// .bbque.GenericReply.Code value = 1;
inline void GenericReply::clear_value() {
  value_ = 0;
}
inline ::bbque::GenericReply_Code GenericReply::value() const {
  // @@protoc_insertion_point(field_get:bbque.GenericReply.value)
  return static_cast< ::bbque::GenericReply_Code >(value_);
}
inline void GenericReply::set_value(::bbque::GenericReply_Code value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:bbque.GenericReply.value)
}

// -------------------------------------------------------------------

// ResourceStatusRequest

// uint32 sender_id = 1;
inline void ResourceStatusRequest::clear_sender_id() {
  sender_id_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusRequest::sender_id() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusRequest.sender_id)
  return sender_id_;
}
inline void ResourceStatusRequest::set_sender_id(::google::protobuf::uint32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusRequest.sender_id)
}

// uint32 dest_id = 2;
inline void ResourceStatusRequest::clear_dest_id() {
  dest_id_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusRequest::dest_id() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusRequest.dest_id)
  return dest_id_;
}
inline void ResourceStatusRequest::set_dest_id(::google::protobuf::uint32 value) {
  
  dest_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusRequest.dest_id)
}

// string path = 3;
inline void ResourceStatusRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResourceStatusRequest::path() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusRequest.path)
  return path_.GetNoArena();
}
inline void ResourceStatusRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusRequest.path)
}
#if LANG_CXX11
inline void ResourceStatusRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bbque.ResourceStatusRequest.path)
}
#endif
inline void ResourceStatusRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bbque.ResourceStatusRequest.path)
}
inline void ResourceStatusRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bbque.ResourceStatusRequest.path)
}
inline ::std::string* ResourceStatusRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:bbque.ResourceStatusRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResourceStatusRequest::release_path() {
  // @@protoc_insertion_point(field_release:bbque.ResourceStatusRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResourceStatusRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:bbque.ResourceStatusRequest.path)
}

// bool average = 4;
inline void ResourceStatusRequest::clear_average() {
  average_ = false;
}
inline bool ResourceStatusRequest::average() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusRequest.average)
  return average_;
}
inline void ResourceStatusRequest::set_average(bool value) {
  
  average_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusRequest.average)
}

// -------------------------------------------------------------------

// ResourceStatusReply

// uint64 total = 1;
inline void ResourceStatusReply::clear_total() {
  total_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceStatusReply::total() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.total)
  return total_;
}
inline void ResourceStatusReply::set_total(::google::protobuf::uint64 value) {
  
  total_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.total)
}

// uint64 used = 2;
inline void ResourceStatusReply::clear_used() {
  used_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceStatusReply::used() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.used)
  return used_;
}
inline void ResourceStatusReply::set_used(::google::protobuf::uint64 value) {
  
  used_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.used)
}

// uint32 degradation = 3;
inline void ResourceStatusReply::clear_degradation() {
  degradation_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusReply::degradation() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.degradation)
  return degradation_;
}
inline void ResourceStatusReply::set_degradation(::google::protobuf::uint32 value) {
  
  degradation_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.degradation)
}

// uint32 temperature = 4;
inline void ResourceStatusReply::clear_temperature() {
  temperature_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusReply::temperature() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.temperature)
  return temperature_;
}
inline void ResourceStatusReply::set_temperature(::google::protobuf::uint32 value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.temperature)
}

// uint32 power_mw = 5;
inline void ResourceStatusReply::clear_power_mw() {
  power_mw_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusReply::power_mw() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.power_mw)
  return power_mw_;
}
inline void ResourceStatusReply::set_power_mw(::google::protobuf::uint32 value) {
  
  power_mw_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.power_mw)
}

// uint32 load = 6;
inline void ResourceStatusReply::clear_load() {
  load_ = 0u;
}
inline ::google::protobuf::uint32 ResourceStatusReply::load() const {
  // @@protoc_insertion_point(field_get:bbque.ResourceStatusReply.load)
  return load_;
}
inline void ResourceStatusReply::set_load(::google::protobuf::uint32 value) {
  
  load_ = value;
  // @@protoc_insertion_point(field_set:bbque.ResourceStatusReply.load)
}

// -------------------------------------------------------------------

// WorkloadStatusReply

// uint32 nr_ready = 1;
inline void WorkloadStatusReply::clear_nr_ready() {
  nr_ready_ = 0u;
}
inline ::google::protobuf::uint32 WorkloadStatusReply::nr_ready() const {
  // @@protoc_insertion_point(field_get:bbque.WorkloadStatusReply.nr_ready)
  return nr_ready_;
}
inline void WorkloadStatusReply::set_nr_ready(::google::protobuf::uint32 value) {
  
  nr_ready_ = value;
  // @@protoc_insertion_point(field_set:bbque.WorkloadStatusReply.nr_ready)
}

// uint32 nr_running = 2;
inline void WorkloadStatusReply::clear_nr_running() {
  nr_running_ = 0u;
}
inline ::google::protobuf::uint32 WorkloadStatusReply::nr_running() const {
  // @@protoc_insertion_point(field_get:bbque.WorkloadStatusReply.nr_running)
  return nr_running_;
}
inline void WorkloadStatusReply::set_nr_running(::google::protobuf::uint32 value) {
  
  nr_running_ = value;
  // @@protoc_insertion_point(field_set:bbque.WorkloadStatusReply.nr_running)
}

// -------------------------------------------------------------------

// ChannelStatusReply

// bool connected = 1;
inline void ChannelStatusReply::clear_connected() {
  connected_ = false;
}
inline bool ChannelStatusReply::connected() const {
  // @@protoc_insertion_point(field_get:bbque.ChannelStatusReply.connected)
  return connected_;
}
inline void ChannelStatusReply::set_connected(bool value) {
  
  connected_ = value;
  // @@protoc_insertion_point(field_set:bbque.ChannelStatusReply.connected)
}

// uint32 latency_ms = 2;
inline void ChannelStatusReply::clear_latency_ms() {
  latency_ms_ = 0u;
}
inline ::google::protobuf::uint32 ChannelStatusReply::latency_ms() const {
  // @@protoc_insertion_point(field_get:bbque.ChannelStatusReply.latency_ms)
  return latency_ms_;
}
inline void ChannelStatusReply::set_latency_ms(::google::protobuf::uint32 value) {
  
  latency_ms_ = value;
  // @@protoc_insertion_point(field_set:bbque.ChannelStatusReply.latency_ms)
}

// -------------------------------------------------------------------

// NodeManagementRequest

// uint32 sender_id = 1;
inline void NodeManagementRequest::clear_sender_id() {
  sender_id_ = 0u;
}
inline ::google::protobuf::uint32 NodeManagementRequest::sender_id() const {
  // @@protoc_insertion_point(field_get:bbque.NodeManagementRequest.sender_id)
  return sender_id_;
}
inline void NodeManagementRequest::set_sender_id(::google::protobuf::uint32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.NodeManagementRequest.sender_id)
}

// .bbque.NodeManagementRequest.Action value = 2;
inline void NodeManagementRequest::clear_value() {
  value_ = 0;
}
inline ::bbque::NodeManagementRequest_Action NodeManagementRequest::value() const {
  // @@protoc_insertion_point(field_get:bbque.NodeManagementRequest.value)
  return static_cast< ::bbque::NodeManagementRequest_Action >(value_);
}
inline void NodeManagementRequest::set_value(::bbque::NodeManagementRequest_Action value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:bbque.NodeManagementRequest.value)
}

// uint32 partition_num = 3;
inline void NodeManagementRequest::clear_partition_num() {
  partition_num_ = 0u;
}
inline ::google::protobuf::uint32 NodeManagementRequest::partition_num() const {
  // @@protoc_insertion_point(field_get:bbque.NodeManagementRequest.partition_num)
  return partition_num_;
}
inline void NodeManagementRequest::set_partition_num(::google::protobuf::uint32 value) {
  
  partition_num_ = value;
  // @@protoc_insertion_point(field_set:bbque.NodeManagementRequest.partition_num)
}

// -------------------------------------------------------------------

// ApplicationSchedulingRequest

// uint32 sender_id = 1;
inline void ApplicationSchedulingRequest::clear_sender_id() {
  sender_id_ = 0u;
}
inline ::google::protobuf::uint32 ApplicationSchedulingRequest::sender_id() const {
  // @@protoc_insertion_point(field_get:bbque.ApplicationSchedulingRequest.sender_id)
  return sender_id_;
}
inline void ApplicationSchedulingRequest::set_sender_id(::google::protobuf::uint32 value) {
  
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.ApplicationSchedulingRequest.sender_id)
}

// uint32 app_id = 2;
inline void ApplicationSchedulingRequest::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ApplicationSchedulingRequest::app_id() const {
  // @@protoc_insertion_point(field_get:bbque.ApplicationSchedulingRequest.app_id)
  return app_id_;
}
inline void ApplicationSchedulingRequest::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.ApplicationSchedulingRequest.app_id)
}

// string app_name = 3;
inline void ApplicationSchedulingRequest::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApplicationSchedulingRequest::app_name() const {
  // @@protoc_insertion_point(field_get:bbque.ApplicationSchedulingRequest.app_name)
  return app_name_.GetNoArena();
}
inline void ApplicationSchedulingRequest::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bbque.ApplicationSchedulingRequest.app_name)
}
#if LANG_CXX11
inline void ApplicationSchedulingRequest::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bbque.ApplicationSchedulingRequest.app_name)
}
#endif
inline void ApplicationSchedulingRequest::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bbque.ApplicationSchedulingRequest.app_name)
}
inline void ApplicationSchedulingRequest::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bbque.ApplicationSchedulingRequest.app_name)
}
inline ::std::string* ApplicationSchedulingRequest::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:bbque.ApplicationSchedulingRequest.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplicationSchedulingRequest::release_app_name() {
  // @@protoc_insertion_point(field_release:bbque.ApplicationSchedulingRequest.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplicationSchedulingRequest::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:bbque.ApplicationSchedulingRequest.app_name)
}

// int32 awm_id = 4;
inline void ApplicationSchedulingRequest::clear_awm_id() {
  awm_id_ = 0;
}
inline ::google::protobuf::int32 ApplicationSchedulingRequest::awm_id() const {
  // @@protoc_insertion_point(field_get:bbque.ApplicationSchedulingRequest.awm_id)
  return awm_id_;
}
inline void ApplicationSchedulingRequest::set_awm_id(::google::protobuf::int32 value) {
  
  awm_id_ = value;
  // @@protoc_insertion_point(field_set:bbque.ApplicationSchedulingRequest.awm_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bbque

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bbque::GenericReply_Code> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bbque::GenericReply_Code>() {
  return ::bbque::GenericReply_Code_descriptor();
}
template <> struct is_proto_enum< ::bbque::NodeManagementRequest_Action> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bbque::NodeManagementRequest_Action>() {
  return ::bbque::NodeManagementRequest_Action_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_agent_5fcom_2eproto
